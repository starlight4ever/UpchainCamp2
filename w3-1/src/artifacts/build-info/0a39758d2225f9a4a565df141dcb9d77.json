{
	"id": "0a39758d2225f9a4a565df141dcb9d77",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"w3-1/src/Bank.sol": {
				"content": "pragma solidity ^0.8.0;\n\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC1820Registry.sol\";\n\ninterface TokenRecipient {\n    function tokensReceived(address sender, uint amount) external returns (bool);\n}\n\ncontract Bank is TokenRecipient{\n    mapping(address => uint) public deposited;\n    address public immutable token;\n\n      // keccak256(\"ERC777TokensRecipient\")\n    bytes32 constant private TOKENS_RECIPIENT_INTERFACE_HASH =\n        0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b;\n\n    IERC1820Registry private erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    constructor(address _token) {\n        token = _token;\n        // erc1820.setInterfaceImplementer(address(this), TOKENS_RECIPIENT_INTERFACE_HASH, address(this));\n        \n    }\n\n\n    function deposit(address user, uint amount) public {\n        require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"Transfer from error\");\n        deposited[user] += amount;\n    }\n\n\n    function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s);\n        deposit(user, amount);\n    }\n\n    // 收款时被回调\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external {\n        require(msg.sender == token, \"invalid\");\n        deposited[from] += amount;\n    }\n\n    // 收款时被回调\n    function tokensReceived(address sender, uint amount) external returns (bool) {\n        require(msg.sender == token, \"invalid\");\n        deposited[sender] += amount;\n        return true;\n    }\n\n\n}\n\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1820Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1820Registry.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC1820Registry.sol\";\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./IERC20Permit.sol\";\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/IERC1820Registry.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"IERC1820Registry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "interfaceHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "InterfaceImplementerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "ManagerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								}
							],
							"name": "getInterfaceImplementer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165Interface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "implementsERC165InterfaceNoCache",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "interfaceName",
									"type": "string"
								}
							],
							"name": "interfaceHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_interfaceHash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "implementer",
									"type": "address"
								}
							],
							"name": "setInterfaceImplementer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newManager",
									"type": "address"
								}
							],
							"name": "setManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "updateERC165Cache",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
						"kind": "dev",
						"methods": {
							"getInterfaceImplementer(address,bytes32)": {
								"details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
							},
							"getManager(address)": {
								"details": "Returns the manager for `account`. See {setManager}."
							},
							"implementsERC165Interface(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"params": {
									"account": "Address of the contract to check.",
									"interfaceId": "ERC165 interface to check."
								},
								"returns": {
									"_0": "True if `account` implements `interfaceId`, false otherwise."
								}
							},
							"interfaceHash(string)": {
								"details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
							},
							"setInterfaceImplementer(address,bytes32,address)": {
								"details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
							},
							"setManager(address,address)": {
								"details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
							},
							"updateERC165Cache(address,bytes4)": {
								"params": {
									"account": "Address of the contract for which to update the cache.",
									"interfaceId": "ERC165 interface for which to update the cache."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getInterfaceImplementer(address,bytes32)": "aabbb8ca",
							"getManager(address)": "3d584063",
							"implementsERC165Interface(address,bytes4)": "f712f3e8",
							"implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
							"interfaceHash(string)": "65ba36c1",
							"setInterfaceImplementer(address,bytes32,address)": "29965a1d",
							"setManager(address,address)": "5df8122f",
							"updateERC165Cache(address,bytes4)": "a41e7d51"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementsERC165Interface(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
							},
							"implementsERC165InterfaceNoCache(address,bytes4)": {
								"notice": "Checks whether a contract implements an ERC165 interface or not without using or updating the cache."
							},
							"updateERC165Cache(address,bytes4)": {
								"notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
							}
						},
						"version": 1
					}
				}
			},
			"w3-1/src/Bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "deposited",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permitDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"w3-1/src/Bank.sol\":342:1915  contract Bank is TokenRecipient{... */\n  mstore(0x40, 0xa0)\n    /* \"w3-1/src/Bank.sol\":699:741  0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24 */\n  0x1820a4b7618bde71dce8cdc73aab6c95905fad24\n    /* \"w3-1/src/Bank.sol\":647:742  IERC1820Registry private erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"w3-1/src/Bank.sol\":749:924  constructor(address _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"w3-1/src/Bank.sol\":795:801  _token */\n  dup1\n    /* \"w3-1/src/Bank.sol\":787:801  token = _token */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"w3-1/src/Bank.sol\":749:924  constructor(address _token) {... */\n  pop\n    /* \"w3-1/src/Bank.sol\":342:1915  contract Bank is TokenRecipient{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"w3-1/src/Bank.sol\":342:1915  contract Bank is TokenRecipient{... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2c8fba555b11fb06433ead2e3e73a93968b4d4dbd46bbdc289c1b08f53377bbe\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"w3-1/src/Bank.sol\":342:1915  contract Bank is TokenRecipient{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23de29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24a756d1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f7b1bca\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcb13cddb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"w3-1/src/Bank.sol\":1399:1688  function tokensReceived(... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"w3-1/src/Bank.sol\":1720:1911  function tokensReceived(address sender, uint amount) external returns (bool) {... */\n    tag_4:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w3-1/src/Bank.sol\":931:1127  function deposit(address user, uint amount) public {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      tag_21\n      jump\t// in\n    tag_19:\n      stop\n        /* \"w3-1/src/Bank.sol\":1134:1367  function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"w3-1/src/Bank.sol\":379:420  mapping(address => uint) public deposited */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w3-1/src/Bank.sol\":426:456  address public immutable token */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"w3-1/src/Bank.sol\":1399:1688  function tokensReceived(... */\n    tag_12:\n        /* \"w3-1/src/Bank.sol\":1629:1634  token */\n      immutable(\"0x2c8fba555b11fb06433ead2e3e73a93968b4d4dbd46bbdc289c1b08f53377bbe\")\n        /* \"w3-1/src/Bank.sol\":1615:1634  msg.sender == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w3-1/src/Bank.sol\":1615:1625  msg.sender */\n      caller\n        /* \"w3-1/src/Bank.sol\":1615:1634  msg.sender == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"w3-1/src/Bank.sol\":1607:1646  require(msg.sender == token, \"invalid\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"w3-1/src/Bank.sol\":1675:1681  amount */\n      dup5\n        /* \"w3-1/src/Bank.sol\":1656:1665  deposited */\n      0x00\n        /* \"w3-1/src/Bank.sol\":1656:1671  deposited[from] */\n      dup1\n        /* \"w3-1/src/Bank.sol\":1666:1670  from */\n      dup10\n        /* \"w3-1/src/Bank.sol\":1656:1671  deposited[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"w3-1/src/Bank.sol\":1656:1681  deposited[from] += amount */\n      dup3\n      dup3\n      sload\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w3-1/src/Bank.sol\":1399:1688  function tokensReceived(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"w3-1/src/Bank.sol\":1720:1911  function tokensReceived(address sender, uint amount) external returns (bool) {... */\n    tag_16:\n        /* \"w3-1/src/Bank.sol\":1791:1795  bool */\n      0x00\n        /* \"w3-1/src/Bank.sol\":1829:1834  token */\n      immutable(\"0x2c8fba555b11fb06433ead2e3e73a93968b4d4dbd46bbdc289c1b08f53377bbe\")\n        /* \"w3-1/src/Bank.sol\":1815:1834  msg.sender == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"w3-1/src/Bank.sol\":1815:1825  msg.sender */\n      caller\n        /* \"w3-1/src/Bank.sol\":1815:1834  msg.sender == token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"w3-1/src/Bank.sol\":1807:1846  require(msg.sender == token, \"invalid\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_39\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"w3-1/src/Bank.sol\":1877:1883  amount */\n      dup2\n        /* \"w3-1/src/Bank.sol\":1856:1865  deposited */\n      0x00\n        /* \"w3-1/src/Bank.sol\":1856:1873  deposited[sender] */\n      dup1\n        /* \"w3-1/src/Bank.sol\":1866:1872  sender */\n      dup6\n        /* \"w3-1/src/Bank.sol\":1856:1873  deposited[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"w3-1/src/Bank.sol\":1856:1883  deposited[sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_45\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_45:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w3-1/src/Bank.sol\":1900:1904  true */\n      0x01\n        /* \"w3-1/src/Bank.sol\":1893:1904  return true */\n      swap1\n      pop\n        /* \"w3-1/src/Bank.sol\":1720:1911  function tokensReceived(address sender, uint amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"w3-1/src/Bank.sol\":931:1127  function deposit(address user, uint amount) public {... */\n    tag_21:\n        /* \"w3-1/src/Bank.sol\":1007:1012  token */\n      immutable(\"0x2c8fba555b11fb06433ead2e3e73a93968b4d4dbd46bbdc289c1b08f53377bbe\")\n        /* \"w3-1/src/Bank.sol\":1000:1026  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"w3-1/src/Bank.sol\":1027:1037  msg.sender */\n      caller\n        /* \"w3-1/src/Bank.sol\":1047:1051  this */\n      address\n        /* \"w3-1/src/Bank.sol\":1054:1060  amount */\n      dup5\n        /* \"w3-1/src/Bank.sol\":1000:1061  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"w3-1/src/Bank.sol\":992:1085  require(IERC20(token).transferFrom(msg.sender, address(this), amount), \"Transfer from error\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"w3-1/src/Bank.sol\":1114:1120  amount */\n      dup1\n        /* \"w3-1/src/Bank.sol\":1095:1104  deposited */\n      0x00\n        /* \"w3-1/src/Bank.sol\":1095:1110  deposited[user] */\n      dup1\n        /* \"w3-1/src/Bank.sol\":1105:1109  user */\n      dup5\n        /* \"w3-1/src/Bank.sol\":1095:1110  deposited[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"w3-1/src/Bank.sol\":1095:1120  deposited[user] += amount */\n      dup3\n      dup3\n      sload\n      tag_56\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_56:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"w3-1/src/Bank.sol\":931:1127  function deposit(address user, uint amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"w3-1/src/Bank.sol\":1134:1367  function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_25:\n        /* \"w3-1/src/Bank.sol\":1262:1267  token */\n      immutable(\"0x2c8fba555b11fb06433ead2e3e73a93968b4d4dbd46bbdc289c1b08f53377bbe\")\n        /* \"w3-1/src/Bank.sol\":1249:1275  IERC20Permit(token).permit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd505accf\n        /* \"w3-1/src/Bank.sol\":1276:1286  msg.sender */\n      caller\n        /* \"w3-1/src/Bank.sol\":1296:1300  this */\n      address\n        /* \"w3-1/src/Bank.sol\":1303:1309  amount */\n      dup9\n        /* \"w3-1/src/Bank.sol\":1311:1319  deadline */\n      dup9\n        /* \"w3-1/src/Bank.sol\":1321:1322  v */\n      dup9\n        /* \"w3-1/src/Bank.sol\":1324:1325  r */\n      dup9\n        /* \"w3-1/src/Bank.sol\":1327:1328  s */\n      dup9\n        /* \"w3-1/src/Bank.sol\":1249:1329  IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n        /* \"w3-1/src/Bank.sol\":1339:1360  deposit(user, amount) */\n      tag_63\n        /* \"w3-1/src/Bank.sol\":1347:1351  user */\n      dup7\n        /* \"w3-1/src/Bank.sol\":1353:1359  amount */\n      dup7\n        /* \"w3-1/src/Bank.sol\":1339:1346  deposit */\n      tag_21\n        /* \"w3-1/src/Bank.sol\":1339:1360  deposit(user, amount) */\n      jump\t// in\n    tag_63:\n        /* \"w3-1/src/Bank.sol\":1134:1367  function permitDeposit(address user, uint amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"w3-1/src/Bank.sol\":379:420  mapping(address => uint) public deposited */\n    tag_29:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"w3-1/src/Bank.sol\":426:456  address public immutable token */\n    tag_33:\n      immutable(\"0x2c8fba555b11fb06433ead2e3e73a93968b4d4dbd46bbdc289c1b08f53377bbe\")\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_65:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_66:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_67:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_68:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_104\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_67\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_69:\n        /* \"#utility.yul\":641:665   */\n      tag_106\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_68\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_107:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_70:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_109\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_69\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_71:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_72:\n        /* \"#utility.yul\":997:1021   */\n      tag_112\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_71\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_113:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_73:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_115\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_72\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_74:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_75:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_76:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_77:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_121\n      tag_74\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1663:1785   */\n    tag_120:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_123\n      tag_75\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1833:1950   */\n    tag_122:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_125\n      tag_76\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1997:2125   */\n    tag_124:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3590   */\n    tag_11:\n        /* \"#utility.yul\":2263:2269   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup1\n        /* \"#utility.yul\":2279:2285   */\n      0x00\n        /* \"#utility.yul\":2287:2293   */\n      dup1\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup1\n        /* \"#utility.yul\":2311:2317   */\n      0x00\n        /* \"#utility.yul\":2319:2325   */\n      dup1\n        /* \"#utility.yul\":2368:2371   */\n      0xc0\n        /* \"#utility.yul\":2356:2365   */\n      dup10\n        /* \"#utility.yul\":2347:2354   */\n      dup12\n        /* \"#utility.yul\":2343:2366   */\n      sub\n        /* \"#utility.yul\":2339:2372   */\n      slt\n        /* \"#utility.yul\":2336:2456   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":2375:2454   */\n      tag_128\n      tag_65\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2336:2456   */\n    tag_127:\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2520:2573   */\n      tag_129\n        /* \"#utility.yul\":2565:2572   */\n      dup12\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2545:2554   */\n      dup13\n        /* \"#utility.yul\":2541:2563   */\n      add\n        /* \"#utility.yul\":2520:2573   */\n      tag_70\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2510:2573   */\n      swap9\n      pop\n        /* \"#utility.yul\":2466:2583   */\n      pop\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2648:2701   */\n      tag_130\n        /* \"#utility.yul\":2693:2700   */\n      dup12\n        /* \"#utility.yul\":2684:2690   */\n      dup3\n        /* \"#utility.yul\":2673:2682   */\n      dup13\n        /* \"#utility.yul\":2669:2691   */\n      add\n        /* \"#utility.yul\":2648:2701   */\n      tag_70\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2638:2701   */\n      swap8\n      pop\n        /* \"#utility.yul\":2593:2711   */\n      pop\n        /* \"#utility.yul\":2750:2752   */\n      0x40\n        /* \"#utility.yul\":2776:2829   */\n      tag_131\n        /* \"#utility.yul\":2821:2828   */\n      dup12\n        /* \"#utility.yul\":2812:2818   */\n      dup3\n        /* \"#utility.yul\":2801:2810   */\n      dup13\n        /* \"#utility.yul\":2797:2819   */\n      add\n        /* \"#utility.yul\":2776:2829   */\n      tag_70\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2766:2829   */\n      swap7\n      pop\n        /* \"#utility.yul\":2721:2839   */\n      pop\n        /* \"#utility.yul\":2878:2880   */\n      0x60\n        /* \"#utility.yul\":2904:2957   */\n      tag_132\n        /* \"#utility.yul\":2949:2956   */\n      dup12\n        /* \"#utility.yul\":2940:2946   */\n      dup3\n        /* \"#utility.yul\":2929:2938   */\n      dup13\n        /* \"#utility.yul\":2925:2947   */\n      add\n        /* \"#utility.yul\":2904:2957   */\n      tag_73\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2894:2957   */\n      swap6\n      pop\n        /* \"#utility.yul\":2849:2967   */\n      pop\n        /* \"#utility.yul\":3034:3037   */\n      0x80\n        /* \"#utility.yul\":3023:3032   */\n      dup10\n        /* \"#utility.yul\":3019:3038   */\n      add\n        /* \"#utility.yul\":3006:3039   */\n      calldataload\n        /* \"#utility.yul\":3066:3084   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3055:3085   */\n      gt\n        /* \"#utility.yul\":3052:3169   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3088:3167   */\n      tag_134\n      tag_66\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3052:3169   */\n    tag_133:\n        /* \"#utility.yul\":3201:3265   */\n      tag_135\n        /* \"#utility.yul\":3257:3264   */\n      dup12\n        /* \"#utility.yul\":3248:3254   */\n      dup3\n        /* \"#utility.yul\":3237:3246   */\n      dup13\n        /* \"#utility.yul\":3233:3255   */\n      add\n        /* \"#utility.yul\":3201:3265   */\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3183:3265   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2977:3275   */\n      pop\n        /* \"#utility.yul\":3342:3345   */\n      0xa0\n        /* \"#utility.yul\":3331:3340   */\n      dup10\n        /* \"#utility.yul\":3327:3346   */\n      add\n        /* \"#utility.yul\":3314:3347   */\n      calldataload\n        /* \"#utility.yul\":3374:3392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3366:3372   */\n      dup2\n        /* \"#utility.yul\":3363:3393   */\n      gt\n        /* \"#utility.yul\":3360:3477   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3396:3475   */\n      tag_137\n      tag_66\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3360:3477   */\n    tag_136:\n        /* \"#utility.yul\":3509:3573   */\n      tag_138\n        /* \"#utility.yul\":3565:3572   */\n      dup12\n        /* \"#utility.yul\":3556:3562   */\n      dup3\n        /* \"#utility.yul\":3545:3554   */\n      dup13\n        /* \"#utility.yul\":3541:3563   */\n      add\n        /* \"#utility.yul\":3509:3573   */\n      tag_77\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3491:3573   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3285:3583   */\n      pop\n        /* \"#utility.yul\":2137:3590   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:4070   */\n    tag_15:\n        /* \"#utility.yul\":3664:3670   */\n      0x00\n        /* \"#utility.yul\":3672:3678   */\n      dup1\n        /* \"#utility.yul\":3721:3723   */\n      0x40\n        /* \"#utility.yul\":3709:3718   */\n      dup4\n        /* \"#utility.yul\":3700:3707   */\n      dup6\n        /* \"#utility.yul\":3696:3719   */\n      sub\n        /* \"#utility.yul\":3692:3724   */\n      slt\n        /* \"#utility.yul\":3689:3808   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3727:3806   */\n      tag_141\n      tag_65\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3689:3808   */\n    tag_140:\n        /* \"#utility.yul\":3847:3848   */\n      0x00\n        /* \"#utility.yul\":3872:3925   */\n      tag_142\n        /* \"#utility.yul\":3917:3924   */\n      dup6\n        /* \"#utility.yul\":3908:3914   */\n      dup3\n        /* \"#utility.yul\":3897:3906   */\n      dup7\n        /* \"#utility.yul\":3893:3915   */\n      add\n        /* \"#utility.yul\":3872:3925   */\n      tag_70\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3862:3925   */\n      swap3\n      pop\n        /* \"#utility.yul\":3818:3935   */\n      pop\n        /* \"#utility.yul\":3974:3976   */\n      0x20\n        /* \"#utility.yul\":4000:4053   */\n      tag_143\n        /* \"#utility.yul\":4045:4052   */\n      dup6\n        /* \"#utility.yul\":4036:4042   */\n      dup3\n        /* \"#utility.yul\":4025:4034   */\n      dup7\n        /* \"#utility.yul\":4021:4043   */\n      add\n        /* \"#utility.yul\":4000:4053   */\n      tag_73\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3990:4053   */\n      swap2\n      pop\n        /* \"#utility.yul\":3945:4063   */\n      pop\n        /* \"#utility.yul\":3596:4070   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4076:4166   */\n    tag_78:\n        /* \"#utility.yul\":4110:4117   */\n      0x00\n        /* \"#utility.yul\":4153:4158   */\n      dup2\n        /* \"#utility.yul\":4146:4159   */\n      iszero\n        /* \"#utility.yul\":4139:4160   */\n      iszero\n        /* \"#utility.yul\":4128:4160   */\n      swap1\n      pop\n        /* \"#utility.yul\":4076:4166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4172:4281   */\n    tag_79:\n        /* \"#utility.yul\":4253:4274   */\n      tag_146\n        /* \"#utility.yul\":4268:4273   */\n      dup2\n        /* \"#utility.yul\":4253:4274   */\n      tag_78\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4248:4251   */\n      dup3\n        /* \"#utility.yul\":4241:4275   */\n      mstore\n        /* \"#utility.yul\":4172:4281   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4287:4497   */\n    tag_18:\n        /* \"#utility.yul\":4374:4378   */\n      0x00\n        /* \"#utility.yul\":4412:4414   */\n      0x20\n        /* \"#utility.yul\":4401:4410   */\n      dup3\n        /* \"#utility.yul\":4397:4415   */\n      add\n        /* \"#utility.yul\":4389:4415   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4490   */\n      tag_148\n        /* \"#utility.yul\":4487:4488   */\n      0x00\n        /* \"#utility.yul\":4476:4485   */\n      dup4\n        /* \"#utility.yul\":4472:4489   */\n      add\n        /* \"#utility.yul\":4463:4469   */\n      dup5\n        /* \"#utility.yul\":4425:4490   */\n      tag_79\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4287:4497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4589   */\n    tag_80:\n        /* \"#utility.yul\":4538:4545   */\n      0x00\n        /* \"#utility.yul\":4578:4582   */\n      0xff\n        /* \"#utility.yul\":4571:4576   */\n      dup3\n        /* \"#utility.yul\":4567:4583   */\n      and\n        /* \"#utility.yul\":4556:4583   */\n      swap1\n      pop\n        /* \"#utility.yul\":4503:4589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4595:4713   */\n    tag_81:\n        /* \"#utility.yul\":4666:4688   */\n      tag_151\n        /* \"#utility.yul\":4682:4687   */\n      dup2\n        /* \"#utility.yul\":4666:4688   */\n      tag_80\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4659:4664   */\n      dup2\n        /* \"#utility.yul\":4656:4689   */\n      eq\n        /* \"#utility.yul\":4646:4707   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":4703:4704   */\n      0x00\n        /* \"#utility.yul\":4700:4701   */\n      dup1\n        /* \"#utility.yul\":4693:4705   */\n      revert\n        /* \"#utility.yul\":4646:4707   */\n    tag_152:\n        /* \"#utility.yul\":4595:4713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4719:4854   */\n    tag_82:\n        /* \"#utility.yul\":4763:4768   */\n      0x00\n        /* \"#utility.yul\":4801:4807   */\n      dup2\n        /* \"#utility.yul\":4788:4808   */\n      calldataload\n        /* \"#utility.yul\":4779:4808   */\n      swap1\n      pop\n        /* \"#utility.yul\":4817:4848   */\n      tag_154\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4817:4848   */\n      tag_81\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4719:4854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:4937   */\n    tag_83:\n        /* \"#utility.yul\":4897:4904   */\n      0x00\n        /* \"#utility.yul\":4926:4931   */\n      dup2\n        /* \"#utility.yul\":4915:4931   */\n      swap1\n      pop\n        /* \"#utility.yul\":4860:4937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4943:5065   */\n    tag_84:\n        /* \"#utility.yul\":5016:5040   */\n      tag_157\n        /* \"#utility.yul\":5034:5039   */\n      dup2\n        /* \"#utility.yul\":5016:5040   */\n      tag_83\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5009:5014   */\n      dup2\n        /* \"#utility.yul\":5006:5041   */\n      eq\n        /* \"#utility.yul\":4996:5059   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":4996:5059   */\n    tag_158:\n        /* \"#utility.yul\":4943:5065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5210   */\n    tag_85:\n        /* \"#utility.yul\":5117:5122   */\n      0x00\n        /* \"#utility.yul\":5155:5161   */\n      dup2\n        /* \"#utility.yul\":5142:5162   */\n      calldataload\n        /* \"#utility.yul\":5133:5162   */\n      swap1\n      pop\n        /* \"#utility.yul\":5171:5204   */\n      tag_160\n        /* \"#utility.yul\":5198:5203   */\n      dup2\n        /* \"#utility.yul\":5171:5204   */\n      tag_84\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5071:5210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5216:6269   */\n    tag_24:\n        /* \"#utility.yul\":5318:5324   */\n      0x00\n        /* \"#utility.yul\":5326:5332   */\n      dup1\n        /* \"#utility.yul\":5334:5340   */\n      0x00\n        /* \"#utility.yul\":5342:5348   */\n      dup1\n        /* \"#utility.yul\":5350:5356   */\n      0x00\n        /* \"#utility.yul\":5358:5364   */\n      dup1\n        /* \"#utility.yul\":5407:5410   */\n      0xc0\n        /* \"#utility.yul\":5395:5404   */\n      dup8\n        /* \"#utility.yul\":5386:5393   */\n      dup10\n        /* \"#utility.yul\":5382:5405   */\n      sub\n        /* \"#utility.yul\":5378:5411   */\n      slt\n        /* \"#utility.yul\":5375:5495   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":5414:5493   */\n      tag_163\n      tag_65\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5375:5495   */\n    tag_162:\n        /* \"#utility.yul\":5534:5535   */\n      0x00\n        /* \"#utility.yul\":5559:5612   */\n      tag_164\n        /* \"#utility.yul\":5604:5611   */\n      dup10\n        /* \"#utility.yul\":5595:5601   */\n      dup3\n        /* \"#utility.yul\":5584:5593   */\n      dup11\n        /* \"#utility.yul\":5580:5602   */\n      add\n        /* \"#utility.yul\":5559:5612   */\n      tag_70\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":5549:5612   */\n      swap7\n      pop\n        /* \"#utility.yul\":5505:5622   */\n      pop\n        /* \"#utility.yul\":5661:5663   */\n      0x20\n        /* \"#utility.yul\":5687:5740   */\n      tag_165\n        /* \"#utility.yul\":5732:5739   */\n      dup10\n        /* \"#utility.yul\":5723:5729   */\n      dup3\n        /* \"#utility.yul\":5712:5721   */\n      dup11\n        /* \"#utility.yul\":5708:5730   */\n      add\n        /* \"#utility.yul\":5687:5740   */\n      tag_73\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5677:5740   */\n      swap6\n      pop\n        /* \"#utility.yul\":5632:5750   */\n      pop\n        /* \"#utility.yul\":5789:5791   */\n      0x40\n        /* \"#utility.yul\":5815:5868   */\n      tag_166\n        /* \"#utility.yul\":5860:5867   */\n      dup10\n        /* \"#utility.yul\":5851:5857   */\n      dup3\n        /* \"#utility.yul\":5840:5849   */\n      dup11\n        /* \"#utility.yul\":5836:5858   */\n      add\n        /* \"#utility.yul\":5815:5868   */\n      tag_73\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5805:5868   */\n      swap5\n      pop\n        /* \"#utility.yul\":5760:5878   */\n      pop\n        /* \"#utility.yul\":5917:5919   */\n      0x60\n        /* \"#utility.yul\":5943:5994   */\n      tag_167\n        /* \"#utility.yul\":5986:5993   */\n      dup10\n        /* \"#utility.yul\":5977:5983   */\n      dup3\n        /* \"#utility.yul\":5966:5975   */\n      dup11\n        /* \"#utility.yul\":5962:5984   */\n      add\n        /* \"#utility.yul\":5943:5994   */\n      tag_82\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5933:5994   */\n      swap4\n      pop\n        /* \"#utility.yul\":5888:6004   */\n      pop\n        /* \"#utility.yul\":6043:6046   */\n      0x80\n        /* \"#utility.yul\":6070:6123   */\n      tag_168\n        /* \"#utility.yul\":6115:6122   */\n      dup10\n        /* \"#utility.yul\":6106:6112   */\n      dup3\n        /* \"#utility.yul\":6095:6104   */\n      dup11\n        /* \"#utility.yul\":6091:6113   */\n      add\n        /* \"#utility.yul\":6070:6123   */\n      tag_85\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6060:6123   */\n      swap3\n      pop\n        /* \"#utility.yul\":6014:6133   */\n      pop\n        /* \"#utility.yul\":6172:6175   */\n      0xa0\n        /* \"#utility.yul\":6199:6252   */\n      tag_169\n        /* \"#utility.yul\":6244:6251   */\n      dup10\n        /* \"#utility.yul\":6235:6241   */\n      dup3\n        /* \"#utility.yul\":6224:6233   */\n      dup11\n        /* \"#utility.yul\":6220:6242   */\n      add\n        /* \"#utility.yul\":6199:6252   */\n      tag_85\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6189:6252   */\n      swap2\n      pop\n        /* \"#utility.yul\":6143:6262   */\n      pop\n        /* \"#utility.yul\":5216:6269   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":6275:6604   */\n    tag_28:\n        /* \"#utility.yul\":6334:6340   */\n      0x00\n        /* \"#utility.yul\":6383:6385   */\n      0x20\n        /* \"#utility.yul\":6371:6380   */\n      dup3\n        /* \"#utility.yul\":6362:6369   */\n      dup5\n        /* \"#utility.yul\":6358:6381   */\n      sub\n        /* \"#utility.yul\":6354:6386   */\n      slt\n        /* \"#utility.yul\":6351:6470   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":6389:6468   */\n      tag_172\n      tag_65\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6351:6470   */\n    tag_171:\n        /* \"#utility.yul\":6509:6510   */\n      0x00\n        /* \"#utility.yul\":6534:6587   */\n      tag_173\n        /* \"#utility.yul\":6579:6586   */\n      dup5\n        /* \"#utility.yul\":6570:6576   */\n      dup3\n        /* \"#utility.yul\":6559:6568   */\n      dup6\n        /* \"#utility.yul\":6555:6577   */\n      add\n        /* \"#utility.yul\":6534:6587   */\n      tag_70\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":6524:6587   */\n      swap2\n      pop\n        /* \"#utility.yul\":6480:6597   */\n      pop\n        /* \"#utility.yul\":6275:6604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6610:6728   */\n    tag_86:\n        /* \"#utility.yul\":6697:6721   */\n      tag_175\n        /* \"#utility.yul\":6715:6720   */\n      dup2\n        /* \"#utility.yul\":6697:6721   */\n      tag_71\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6692:6695   */\n      dup3\n        /* \"#utility.yul\":6685:6722   */\n      mstore\n        /* \"#utility.yul\":6610:6728   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6734:6956   */\n    tag_31:\n        /* \"#utility.yul\":6827:6831   */\n      0x00\n        /* \"#utility.yul\":6865:6867   */\n      0x20\n        /* \"#utility.yul\":6854:6863   */\n      dup3\n        /* \"#utility.yul\":6850:6868   */\n      add\n        /* \"#utility.yul\":6842:6868   */\n      swap1\n      pop\n        /* \"#utility.yul\":6878:6949   */\n      tag_177\n        /* \"#utility.yul\":6946:6947   */\n      0x00\n        /* \"#utility.yul\":6935:6944   */\n      dup4\n        /* \"#utility.yul\":6931:6948   */\n      add\n        /* \"#utility.yul\":6922:6928   */\n      dup5\n        /* \"#utility.yul\":6878:6949   */\n      tag_86\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6734:6956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6962:7080   */\n    tag_87:\n        /* \"#utility.yul\":7049:7073   */\n      tag_179\n        /* \"#utility.yul\":7067:7072   */\n      dup2\n        /* \"#utility.yul\":7049:7073   */\n      tag_68\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7044:7047   */\n      dup3\n        /* \"#utility.yul\":7037:7074   */\n      mstore\n        /* \"#utility.yul\":6962:7080   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7086:7308   */\n    tag_35:\n        /* \"#utility.yul\":7179:7183   */\n      0x00\n        /* \"#utility.yul\":7217:7219   */\n      0x20\n        /* \"#utility.yul\":7206:7215   */\n      dup3\n        /* \"#utility.yul\":7202:7220   */\n      add\n        /* \"#utility.yul\":7194:7220   */\n      swap1\n      pop\n        /* \"#utility.yul\":7230:7301   */\n      tag_181\n        /* \"#utility.yul\":7298:7299   */\n      0x00\n        /* \"#utility.yul\":7287:7296   */\n      dup4\n        /* \"#utility.yul\":7283:7300   */\n      add\n        /* \"#utility.yul\":7274:7280   */\n      dup5\n        /* \"#utility.yul\":7230:7301   */\n      tag_87\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7086:7308   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7314:7483   */\n    tag_88:\n        /* \"#utility.yul\":7398:7409   */\n      0x00\n        /* \"#utility.yul\":7432:7438   */\n      dup3\n        /* \"#utility.yul\":7427:7430   */\n      dup3\n        /* \"#utility.yul\":7420:7439   */\n      mstore\n        /* \"#utility.yul\":7472:7476   */\n      0x20\n        /* \"#utility.yul\":7467:7470   */\n      dup3\n        /* \"#utility.yul\":7463:7477   */\n      add\n        /* \"#utility.yul\":7448:7477   */\n      swap1\n      pop\n        /* \"#utility.yul\":7314:7483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7489:7646   */\n    tag_89:\n        /* \"#utility.yul\":7629:7638   */\n      0x696e76616c696400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7625:7626   */\n      0x00\n        /* \"#utility.yul\":7617:7623   */\n      dup3\n        /* \"#utility.yul\":7613:7627   */\n      add\n        /* \"#utility.yul\":7606:7639   */\n      mstore\n        /* \"#utility.yul\":7489:7646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:8017   */\n    tag_90:\n        /* \"#utility.yul\":7794:7797   */\n      0x00\n        /* \"#utility.yul\":7815:7881   */\n      tag_185\n        /* \"#utility.yul\":7879:7880   */\n      0x07\n        /* \"#utility.yul\":7874:7877   */\n      dup4\n        /* \"#utility.yul\":7815:7881   */\n      tag_88\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":7808:7881   */\n      swap2\n      pop\n        /* \"#utility.yul\":7890:7983   */\n      tag_186\n        /* \"#utility.yul\":7979:7982   */\n      dup3\n        /* \"#utility.yul\":7890:7983   */\n      tag_89\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8008:8010   */\n      0x20\n        /* \"#utility.yul\":8003:8006   */\n      dup3\n        /* \"#utility.yul\":7999:8011   */\n      add\n        /* \"#utility.yul\":7992:8011   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:8017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8023:8442   */\n    tag_39:\n        /* \"#utility.yul\":8189:8193   */\n      0x00\n        /* \"#utility.yul\":8227:8229   */\n      0x20\n        /* \"#utility.yul\":8216:8225   */\n      dup3\n        /* \"#utility.yul\":8212:8230   */\n      add\n        /* \"#utility.yul\":8204:8230   */\n      swap1\n      pop\n        /* \"#utility.yul\":8276:8285   */\n      dup2\n        /* \"#utility.yul\":8270:8274   */\n      dup2\n        /* \"#utility.yul\":8266:8286   */\n      sub\n        /* \"#utility.yul\":8262:8263   */\n      0x00\n        /* \"#utility.yul\":8251:8260   */\n      dup4\n        /* \"#utility.yul\":8247:8264   */\n      add\n        /* \"#utility.yul\":8240:8287   */\n      mstore\n        /* \"#utility.yul\":8304:8435   */\n      tag_188\n        /* \"#utility.yul\":8430:8434   */\n      dup2\n        /* \"#utility.yul\":8304:8435   */\n      tag_90\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":8296:8435   */\n      swap1\n      pop\n        /* \"#utility.yul\":8023:8442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8448:8628   */\n    tag_91:\n        /* \"#utility.yul\":8496:8573   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8493:8494   */\n      0x00\n        /* \"#utility.yul\":8486:8574   */\n      mstore\n        /* \"#utility.yul\":8593:8597   */\n      0x11\n        /* \"#utility.yul\":8590:8591   */\n      0x04\n        /* \"#utility.yul\":8583:8598   */\n      mstore\n        /* \"#utility.yul\":8617:8621   */\n      0x24\n        /* \"#utility.yul\":8614:8615   */\n      0x00\n        /* \"#utility.yul\":8607:8622   */\n      revert\n        /* \"#utility.yul\":8634:8825   */\n    tag_41:\n        /* \"#utility.yul\":8674:8677   */\n      0x00\n        /* \"#utility.yul\":8693:8713   */\n      tag_191\n        /* \"#utility.yul\":8711:8712   */\n      dup3\n        /* \"#utility.yul\":8693:8713   */\n      tag_71\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":8688:8713   */\n      swap2\n      pop\n        /* \"#utility.yul\":8727:8747   */\n      tag_192\n        /* \"#utility.yul\":8745:8746   */\n      dup4\n        /* \"#utility.yul\":8727:8747   */\n      tag_71\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8722:8747   */\n      swap3\n      pop\n        /* \"#utility.yul\":8770:8771   */\n      dup3\n        /* \"#utility.yul\":8767:8768   */\n      dup3\n        /* \"#utility.yul\":8763:8772   */\n      add\n        /* \"#utility.yul\":8756:8772   */\n      swap1\n      pop\n        /* \"#utility.yul\":8791:8794   */\n      dup1\n        /* \"#utility.yul\":8788:8789   */\n      dup3\n        /* \"#utility.yul\":8785:8795   */\n      gt\n        /* \"#utility.yul\":8782:8818   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":8798:8816   */\n      tag_194\n      tag_91\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":8782:8818   */\n    tag_193:\n        /* \"#utility.yul\":8634:8825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9273   */\n    tag_48:\n        /* \"#utility.yul\":8980:8984   */\n      0x00\n        /* \"#utility.yul\":9018:9020   */\n      0x60\n        /* \"#utility.yul\":9007:9016   */\n      dup3\n        /* \"#utility.yul\":9003:9021   */\n      add\n        /* \"#utility.yul\":8995:9021   */\n      swap1\n      pop\n        /* \"#utility.yul\":9031:9102   */\n      tag_196\n        /* \"#utility.yul\":9099:9100   */\n      0x00\n        /* \"#utility.yul\":9088:9097   */\n      dup4\n        /* \"#utility.yul\":9084:9101   */\n      add\n        /* \"#utility.yul\":9075:9081   */\n      dup7\n        /* \"#utility.yul\":9031:9102   */\n      tag_87\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":9112:9184   */\n      tag_197\n        /* \"#utility.yul\":9180:9182   */\n      0x20\n        /* \"#utility.yul\":9169:9178   */\n      dup4\n        /* \"#utility.yul\":9165:9183   */\n      add\n        /* \"#utility.yul\":9156:9162   */\n      dup6\n        /* \"#utility.yul\":9112:9184   */\n      tag_87\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9194:9266   */\n      tag_198\n        /* \"#utility.yul\":9262:9264   */\n      0x40\n        /* \"#utility.yul\":9251:9260   */\n      dup4\n        /* \"#utility.yul\":9247:9265   */\n      add\n        /* \"#utility.yul\":9238:9244   */\n      dup5\n        /* \"#utility.yul\":9194:9266   */\n      tag_86\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8831:9273   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9279:9395   */\n    tag_92:\n        /* \"#utility.yul\":9349:9370   */\n      tag_200\n        /* \"#utility.yul\":9364:9369   */\n      dup2\n        /* \"#utility.yul\":9349:9370   */\n      tag_78\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":9342:9347   */\n      dup2\n        /* \"#utility.yul\":9339:9371   */\n      eq\n        /* \"#utility.yul\":9329:9389   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":9385:9386   */\n      0x00\n        /* \"#utility.yul\":9382:9383   */\n      dup1\n        /* \"#utility.yul\":9375:9387   */\n      revert\n        /* \"#utility.yul\":9329:9389   */\n    tag_201:\n        /* \"#utility.yul\":9279:9395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9401:9538   */\n    tag_93:\n        /* \"#utility.yul\":9455:9460   */\n      0x00\n        /* \"#utility.yul\":9486:9492   */\n      dup2\n        /* \"#utility.yul\":9480:9493   */\n      mload\n        /* \"#utility.yul\":9471:9493   */\n      swap1\n      pop\n        /* \"#utility.yul\":9502:9532   */\n      tag_203\n        /* \"#utility.yul\":9526:9531   */\n      dup2\n        /* \"#utility.yul\":9502:9532   */\n      tag_92\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":9401:9538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9544:9889   */\n    tag_52:\n        /* \"#utility.yul\":9611:9617   */\n      0x00\n        /* \"#utility.yul\":9660:9662   */\n      0x20\n        /* \"#utility.yul\":9648:9657   */\n      dup3\n        /* \"#utility.yul\":9639:9646   */\n      dup5\n        /* \"#utility.yul\":9635:9658   */\n      sub\n        /* \"#utility.yul\":9631:9663   */\n      slt\n        /* \"#utility.yul\":9628:9747   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":9666:9745   */\n      tag_206\n      tag_65\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9628:9747   */\n    tag_205:\n        /* \"#utility.yul\":9786:9787   */\n      0x00\n        /* \"#utility.yul\":9811:9872   */\n      tag_207\n        /* \"#utility.yul\":9864:9871   */\n      dup5\n        /* \"#utility.yul\":9855:9861   */\n      dup3\n        /* \"#utility.yul\":9844:9853   */\n      dup6\n        /* \"#utility.yul\":9840:9862   */\n      add\n        /* \"#utility.yul\":9811:9872   */\n      tag_93\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9801:9872   */\n      swap2\n      pop\n        /* \"#utility.yul\":9757:9882   */\n      pop\n        /* \"#utility.yul\":9544:9889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9895:10064   */\n    tag_94:\n        /* \"#utility.yul\":10035:10056   */\n      0x5472616e736665722066726f6d206572726f7200000000000000000000000000\n        /* \"#utility.yul\":10031:10032   */\n      0x00\n        /* \"#utility.yul\":10023:10029   */\n      dup3\n        /* \"#utility.yul\":10019:10033   */\n      add\n        /* \"#utility.yul\":10012:10057   */\n      mstore\n        /* \"#utility.yul\":9895:10064   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10070:10436   */\n    tag_95:\n        /* \"#utility.yul\":10212:10215   */\n      0x00\n        /* \"#utility.yul\":10233:10300   */\n      tag_210\n        /* \"#utility.yul\":10297:10299   */\n      0x13\n        /* \"#utility.yul\":10292:10295   */\n      dup4\n        /* \"#utility.yul\":10233:10300   */\n      tag_88\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":10226:10300   */\n      swap2\n      pop\n        /* \"#utility.yul\":10309:10402   */\n      tag_211\n        /* \"#utility.yul\":10398:10401   */\n      dup3\n        /* \"#utility.yul\":10309:10402   */\n      tag_94\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":10427:10429   */\n      0x20\n        /* \"#utility.yul\":10422:10425   */\n      dup3\n        /* \"#utility.yul\":10418:10430   */\n      add\n        /* \"#utility.yul\":10411:10430   */\n      swap1\n      pop\n        /* \"#utility.yul\":10070:10436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10442:10861   */\n    tag_55:\n        /* \"#utility.yul\":10608:10612   */\n      0x00\n        /* \"#utility.yul\":10646:10648   */\n      0x20\n        /* \"#utility.yul\":10635:10644   */\n      dup3\n        /* \"#utility.yul\":10631:10649   */\n      add\n        /* \"#utility.yul\":10623:10649   */\n      swap1\n      pop\n        /* \"#utility.yul\":10695:10704   */\n      dup2\n        /* \"#utility.yul\":10689:10693   */\n      dup2\n        /* \"#utility.yul\":10685:10705   */\n      sub\n        /* \"#utility.yul\":10681:10682   */\n      0x00\n        /* \"#utility.yul\":10670:10679   */\n      dup4\n        /* \"#utility.yul\":10666:10683   */\n      add\n        /* \"#utility.yul\":10659:10706   */\n      mstore\n        /* \"#utility.yul\":10723:10854   */\n      tag_213\n        /* \"#utility.yul\":10849:10853   */\n      dup2\n        /* \"#utility.yul\":10723:10854   */\n      tag_95\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":10715:10854   */\n      swap1\n      pop\n        /* \"#utility.yul\":10442:10861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10867:10979   */\n    tag_96:\n        /* \"#utility.yul\":10950:10972   */\n      tag_215\n        /* \"#utility.yul\":10966:10971   */\n      dup2\n        /* \"#utility.yul\":10950:10972   */\n      tag_80\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":10945:10948   */\n      dup3\n        /* \"#utility.yul\":10938:10973   */\n      mstore\n        /* \"#utility.yul\":10867:10979   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10985:11103   */\n    tag_97:\n        /* \"#utility.yul\":11072:11096   */\n      tag_217\n        /* \"#utility.yul\":11090:11095   */\n      dup2\n        /* \"#utility.yul\":11072:11096   */\n      tag_83\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":11067:11070   */\n      dup3\n        /* \"#utility.yul\":11060:11097   */\n      mstore\n        /* \"#utility.yul\":10985:11103   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11109:11987   */\n    tag_59:\n        /* \"#utility.yul\":11366:11370   */\n      0x00\n        /* \"#utility.yul\":11404:11407   */\n      0xe0\n        /* \"#utility.yul\":11393:11402   */\n      dup3\n        /* \"#utility.yul\":11389:11408   */\n      add\n        /* \"#utility.yul\":11381:11408   */\n      swap1\n      pop\n        /* \"#utility.yul\":11418:11489   */\n      tag_219\n        /* \"#utility.yul\":11486:11487   */\n      0x00\n        /* \"#utility.yul\":11475:11484   */\n      dup4\n        /* \"#utility.yul\":11471:11488   */\n      add\n        /* \"#utility.yul\":11462:11468   */\n      dup11\n        /* \"#utility.yul\":11418:11489   */\n      tag_87\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":11499:11571   */\n      tag_220\n        /* \"#utility.yul\":11567:11569   */\n      0x20\n        /* \"#utility.yul\":11556:11565   */\n      dup4\n        /* \"#utility.yul\":11552:11570   */\n      add\n        /* \"#utility.yul\":11543:11549   */\n      dup10\n        /* \"#utility.yul\":11499:11571   */\n      tag_87\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":11581:11653   */\n      tag_221\n        /* \"#utility.yul\":11649:11651   */\n      0x40\n        /* \"#utility.yul\":11638:11647   */\n      dup4\n        /* \"#utility.yul\":11634:11652   */\n      add\n        /* \"#utility.yul\":11625:11631   */\n      dup9\n        /* \"#utility.yul\":11581:11653   */\n      tag_86\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":11663:11735   */\n      tag_222\n        /* \"#utility.yul\":11731:11733   */\n      0x60\n        /* \"#utility.yul\":11720:11729   */\n      dup4\n        /* \"#utility.yul\":11716:11734   */\n      add\n        /* \"#utility.yul\":11707:11713   */\n      dup8\n        /* \"#utility.yul\":11663:11735   */\n      tag_86\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":11745:11814   */\n      tag_223\n        /* \"#utility.yul\":11809:11812   */\n      0x80\n        /* \"#utility.yul\":11798:11807   */\n      dup4\n        /* \"#utility.yul\":11794:11813   */\n      add\n        /* \"#utility.yul\":11785:11791   */\n      dup7\n        /* \"#utility.yul\":11745:11814   */\n      tag_96\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":11824:11897   */\n      tag_224\n        /* \"#utility.yul\":11892:11895   */\n      0xa0\n        /* \"#utility.yul\":11881:11890   */\n      dup4\n        /* \"#utility.yul\":11877:11896   */\n      add\n        /* \"#utility.yul\":11868:11874   */\n      dup6\n        /* \"#utility.yul\":11824:11897   */\n      tag_97\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":11907:11980   */\n      tag_225\n        /* \"#utility.yul\":11975:11978   */\n      0xc0\n        /* \"#utility.yul\":11964:11973   */\n      dup4\n        /* \"#utility.yul\":11960:11979   */\n      add\n        /* \"#utility.yul\":11951:11957   */\n      dup5\n        /* \"#utility.yul\":11907:11980   */\n      tag_97\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11109:11987   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220090fbd5e74919f07ab34f3c9c0566d2e959673589559a18c58a531fcf9be3fbe64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_251": {
									"entryPoint": null,
									"id": 251,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:6",
														"type": ""
													}
												],
												"src": "696:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:6"
															},
															"nodeType": "YulIf",
															"src": "932:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:6",
														"type": ""
													}
												],
												"src": "845:351:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052731820a4b7618bde71dce8cdc73aab6c95905fad2460015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015610063575f80fd5b50604051610cbd380380610cbd8339818101604052810190610085919061011d565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050610148565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100ec826100c3565b9050919050565b6100fc816100e2565b8114610106575f80fd5b50565b5f81519050610117816100f3565b92915050565b5f60208284031215610132576101316100bf565b5b5f61013f84828501610109565b91505092915050565b608051610b4161017c5f395f8181610137015281816102220152818161030c0152818161043e01526104f60152610b415ff3fe608060405234801561000f575f80fd5b506004361061005f575f3560e01c806223de291461006357806324a756d11461007f57806347e7ef24146100af5780638f7b1bca146100cb578063cb13cddb146100e7578063fc0c546a14610117575b5f80fd5b61007d6004803603810190610078919061060e565b610135565b005b610099600480360381019061009491906106d8565b61021f565b6040516100a69190610730565b60405180910390f35b6100c960048036038101906100c491906106d8565b61030a565b005b6100e560048036038101906100e091906107b2565b61043c565b005b61010160048036038101906100fc919061083b565b6104e0565b60405161010e9190610875565b60405180910390f35b61011f6104f4565b60405161012c919061089d565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90610910565b60405180910390fd5b845f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020e919061095b565b925050819055505050505050505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a590610910565b60405180910390fd5b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102f9919061095b565b925050819055506001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103679392919061098e565b6020604051808303815f875af1158015610383573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a791906109ed565b6103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90610a62565b60405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610431919061095b565b925050819055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b81526004016104a19796959493929190610a9e565b5f604051808303815f87803b1580156104b8575f80fd5b505af11580156104ca573d5f803e3d5ffd5b505050506104d8868661030a565b505050505050565b5f602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61054982610520565b9050919050565b6105598161053f565b8114610563575f80fd5b50565b5f8135905061057481610550565b92915050565b5f819050919050565b61058c8161057a565b8114610596575f80fd5b50565b5f813590506105a781610583565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126105ce576105cd6105ad565b5b8235905067ffffffffffffffff8111156105eb576105ea6105b1565b5b602083019150836001820283011115610607576106066105b5565b5b9250929050565b5f805f805f805f8060c0898b03121561062a57610629610518565b5b5f6106378b828c01610566565b98505060206106488b828c01610566565b97505060406106598b828c01610566565b965050606061066a8b828c01610599565b955050608089013567ffffffffffffffff81111561068b5761068a61051c565b5b6106978b828c016105b9565b945094505060a089013567ffffffffffffffff8111156106ba576106b961051c565b5b6106c68b828c016105b9565b92509250509295985092959890939650565b5f80604083850312156106ee576106ed610518565b5b5f6106fb85828601610566565b925050602061070c85828601610599565b9150509250929050565b5f8115159050919050565b61072a81610716565b82525050565b5f6020820190506107435f830184610721565b92915050565b5f60ff82169050919050565b61075e81610749565b8114610768575f80fd5b50565b5f8135905061077981610755565b92915050565b5f819050919050565b6107918161077f565b811461079b575f80fd5b50565b5f813590506107ac81610788565b92915050565b5f805f805f8060c087890312156107cc576107cb610518565b5b5f6107d989828a01610566565b96505060206107ea89828a01610599565b95505060406107fb89828a01610599565b945050606061080c89828a0161076b565b935050608061081d89828a0161079e565b92505060a061082e89828a0161079e565b9150509295509295509295565b5f602082840312156108505761084f610518565b5b5f61085d84828501610566565b91505092915050565b61086f8161057a565b82525050565b5f6020820190506108885f830184610866565b92915050565b6108978161053f565b82525050565b5f6020820190506108b05f83018461088e565b92915050565b5f82825260208201905092915050565b7f696e76616c6964000000000000000000000000000000000000000000000000005f82015250565b5f6108fa6007836108b6565b9150610905826108c6565b602082019050919050565b5f6020820190508181035f830152610927816108ee565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109658261057a565b91506109708361057a565b92508282019050808211156109885761098761092e565b5b92915050565b5f6060820190506109a15f83018661088e565b6109ae602083018561088e565b6109bb6040830184610866565b949350505050565b6109cc81610716565b81146109d6575f80fd5b50565b5f815190506109e7816109c3565b92915050565b5f60208284031215610a0257610a01610518565b5b5f610a0f848285016109d9565b91505092915050565b7f5472616e736665722066726f6d206572726f72000000000000000000000000005f82015250565b5f610a4c6013836108b6565b9150610a5782610a18565b602082019050919050565b5f6020820190508181035f830152610a7981610a40565b9050919050565b610a8981610749565b82525050565b610a988161077f565b82525050565b5f60e082019050610ab15f83018a61088e565b610abe602083018961088e565b610acb6040830188610866565b610ad86060830187610866565b610ae56080830186610a80565b610af260a0830185610a8f565b610aff60c0830184610a8f565b9897505050505050505056fea2646970667358221220090fbd5e74919f07ab34f3c9c0566d2e959673589559a18c58a531fcf9be3fbe64736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCBD CODESIZE SUB DUP1 PUSH2 0xCBD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x11D JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x148 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC DUP2 PUSH2 0xE2 JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x117 DUP2 PUSH2 0xF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0xBF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F DUP5 DUP3 DUP6 ADD PUSH2 0x109 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xB41 PUSH2 0x17C PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x137 ADD MSTORE DUP2 DUP2 PUSH2 0x222 ADD MSTORE DUP2 DUP2 PUSH2 0x30C ADD MSTORE DUP2 DUP2 PUSH2 0x43E ADD MSTORE PUSH2 0x4F6 ADD MSTORE PUSH2 0xB41 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x24A756D1 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8F7B1BCA EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xCB13CDDB EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x117 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x383 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4D8 DUP7 DUP7 PUSH2 0x30A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x549 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x559 DUP2 PUSH2 0x53F JUMP JUMPDEST DUP2 EQ PUSH2 0x563 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x574 DUP2 PUSH2 0x550 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58C DUP2 PUSH2 0x57A JUMP JUMPDEST DUP2 EQ PUSH2 0x596 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A7 DUP2 PUSH2 0x583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x5AD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EA PUSH2 0x5B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x607 JUMPI PUSH2 0x606 PUSH2 0x5B5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x62A JUMPI PUSH2 0x629 PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x637 DUP12 DUP3 DUP13 ADD PUSH2 0x566 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x648 DUP12 DUP3 DUP13 ADD PUSH2 0x566 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x659 DUP12 DUP3 DUP13 ADD PUSH2 0x566 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x66A DUP12 DUP3 DUP13 ADD PUSH2 0x599 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68B JUMPI PUSH2 0x68A PUSH2 0x51C JUMP JUMPDEST JUMPDEST PUSH2 0x697 DUP12 DUP3 DUP13 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x51C JUMP JUMPDEST JUMPDEST PUSH2 0x6C6 DUP12 DUP3 DUP13 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EE JUMPI PUSH2 0x6ED PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6FB DUP6 DUP3 DUP7 ADD PUSH2 0x566 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x70C DUP6 DUP3 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH2 0x716 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x743 PUSH0 DUP4 ADD DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x749 JUMP JUMPDEST DUP2 EQ PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x779 DUP2 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x77F JUMP JUMPDEST DUP2 EQ PUSH2 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7AC DUP2 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH2 0x7CB PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D9 DUP10 DUP3 DUP11 ADD PUSH2 0x566 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x7EA DUP10 DUP3 DUP11 ADD PUSH2 0x599 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x7FB DUP10 DUP3 DUP11 ADD PUSH2 0x599 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x80C DUP10 DUP3 DUP11 ADD PUSH2 0x76B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x81D DUP10 DUP3 DUP11 ADD PUSH2 0x79E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x82E DUP10 DUP3 DUP11 ADD PUSH2 0x79E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x85D DUP5 DUP3 DUP6 ADD PUSH2 0x566 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86F DUP2 PUSH2 0x57A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x888 PUSH0 DUP4 ADD DUP5 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x897 DUP2 PUSH2 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x88E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696400000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8FA PUSH1 0x7 DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x905 DUP3 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x927 DUP2 PUSH2 0x8EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x965 DUP3 PUSH2 0x57A JUMP JUMPDEST SWAP2 POP PUSH2 0x970 DUP4 PUSH2 0x57A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x92E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9A1 PUSH0 DUP4 ADD DUP7 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x866 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC DUP2 PUSH2 0x716 JUMP JUMPDEST DUP2 EQ PUSH2 0x9D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9E7 DUP2 PUSH2 0x9C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA02 JUMPI PUSH2 0xA01 PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA0F DUP5 DUP3 DUP6 ADD PUSH2 0x9D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D206572726F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA4C PUSH1 0x13 DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP3 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA79 DUP2 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA89 DUP2 PUSH2 0x749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA98 DUP2 PUSH2 0x77F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xAB1 PUSH0 DUP4 ADD DUP11 PUSH2 0x88E JUMP JUMPDEST PUSH2 0xABE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x88E JUMP JUMPDEST PUSH2 0xACB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x866 JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x866 JUMP JUMPDEST PUSH2 0xAE5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0xAFF PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xA8F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xF 0xBD 0x5E PUSH21 0x919F07AB34F3C9C0566D2E959673589559A18C58A5 BALANCE 0xFC 0xF9 0xBE EXTCODEHASH 0xBE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "342:1573:5:-:0;;;699:42;647:95;;;;;;;;;;;;;;;;;;;;749:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;795:6;787:14;;;;;;;;;;749:175;342:1573;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;342:1573:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_281": {
									"entryPoint": 778,
									"id": 281,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposited_230": {
									"entryPoint": 1248,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@permitDeposit_319": {
									"entryPoint": 1084,
									"id": 319,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@token_232": {
									"entryPoint": 1268,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokensReceived_349": {
									"entryPoint": 309,
									"id": 349,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@tokensReceived_375": {
									"entryPoint": 543,
									"id": 375,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11990:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:478:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1702:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:35:6"
															},
															"nodeType": "YulIf",
															"src": "1663:122:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:6"
															},
															"nodeType": "YulIf",
															"src": "1833:117:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2042:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:41:6"
															},
															"nodeType": "YulIf",
															"src": "1997:128:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1620:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1628:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1636:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:6",
														"type": ""
													}
												],
												"src": "1579:552:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:1264:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2375:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:33:6"
															},
															"nodeType": "YulIf",
															"src": "2336:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2466:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2481:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2485:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2510:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2545:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2556:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2541:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2520:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2510:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2593:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2608:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2612:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2638:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2673:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2684:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2669:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2648:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2721:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2736:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2740:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2801:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2812:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2821:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2776:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2849:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2864:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2868:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2929:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2925:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2904:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2977:298:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2992:47:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3023:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3034:3:6",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3019:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3019:19:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3006:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:33:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2996:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3086:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3088:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3088:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3088:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3066:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3055:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3052:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3183:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3237:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3248:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3233:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3257:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3201:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3183:6:6"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3191:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3285:298:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3300:47:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3331:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3342:3:6",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3327:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3327:19:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3314:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:33:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3304:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3394:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3396:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3396:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3396:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3363:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "3360:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3491:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3545:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3556:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3541:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3541:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3565:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3509:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3491:6:6"
																		},
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "3499:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2240:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2251:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2263:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2271:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2279:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2287:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2295:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2303:6:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2311:6:6",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2319:6:6",
														"type": ""
													}
												],
												"src": "2137:1453:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3725:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3727:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3727:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3700:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3696:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3696:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:32:6"
															},
															"nodeType": "YulIf",
															"src": "3689:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3818:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3833:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3847:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3837:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3862:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3897:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3908:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3893:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3893:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3917:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3862:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3945:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4025:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4036:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4021:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4021:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4045:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4000:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3990:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3641:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3652:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3664:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3672:6:6",
														"type": ""
													}
												],
												"src": "3596:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4128:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4153:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4146:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4146:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4139:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4128:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4100:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4110:7:6",
														"type": ""
													}
												],
												"src": "4076:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4268:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4253:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4241:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4219:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4226:3:6",
														"type": ""
													}
												],
												"src": "4172:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4379:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4389:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4401:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4397:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4389:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4463:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4476:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4487:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4472:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4472:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4425:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4425:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4351:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4363:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4374:4:6",
														"type": ""
													}
												],
												"src": "4287:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4546:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4556:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4571:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4556:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4528:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4538:7:6",
														"type": ""
													}
												],
												"src": "4503:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4636:77:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4691:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4700:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4703:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4693:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4693:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4693:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4659:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4682:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "4666:15:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4666:22:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4656:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4656:33:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4649:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4649:41:6"
															},
															"nodeType": "YulIf",
															"src": "4646:61:6"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4629:5:6",
														"type": ""
													}
												],
												"src": "4595:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:85:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4779:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4801:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4788:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4779:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4842:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4817:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4817:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4817:31:6"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4747:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4755:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4763:5:6",
														"type": ""
													}
												],
												"src": "4719:135:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4905:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4915:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4926:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4915:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4887:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4897:7:6",
														"type": ""
													}
												],
												"src": "4860:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4986:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5045:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5009:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5034:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "5016:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5016:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5006:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5006:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:43:6"
															},
															"nodeType": "YulIf",
															"src": "4996:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4979:5:6",
														"type": ""
													}
												],
												"src": "4943:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5123:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5133:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5155:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5142:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5142:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5133:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5198:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "5171:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5171:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5171:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5101:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5109:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5117:5:6",
														"type": ""
													}
												],
												"src": "5071:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:904:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5412:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5414:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5414:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5414:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5386:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5395:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5382:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5382:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5407:3:6",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5378:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:33:6"
															},
															"nodeType": "YulIf",
															"src": "5375:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "5505:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5520:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5534:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5524:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5549:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5584:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5595:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5580:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5580:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5604:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5559:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5559:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5549:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5632:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5647:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5651:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5677:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5712:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5723:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5708:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5708:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5732:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5687:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5677:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5760:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5775:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5779:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5840:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5836:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5815:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5888:116:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5903:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5917:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5933:61:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5966:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5977:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5962:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5962:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5986:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5943:18:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:51:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5933:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6014:119:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6029:17:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6043:3:6",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6033:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6060:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6095:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6106:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6091:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6091:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6115:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6070:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6070:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6060:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6143:119:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6158:17:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:3:6",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6162:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6189:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6224:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6235:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6220:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6220:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6244:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6199:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6199:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "6189:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5295:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5306:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5318:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5326:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5334:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5342:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5350:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5358:6:6",
														"type": ""
													}
												],
												"src": "5216:1053:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6387:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6389:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6389:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6389:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6362:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6371:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6358:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6358:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6383:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6354:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6354:32:6"
															},
															"nodeType": "YulIf",
															"src": "6351:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6480:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6495:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6499:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6524:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6559:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6570:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6555:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6555:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6579:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6534:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6524:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6311:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6322:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6334:6:6",
														"type": ""
													}
												],
												"src": "6275:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6675:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6692:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6715:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6697:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6697:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6685:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6685:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6685:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6663:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6670:3:6",
														"type": ""
													}
												],
												"src": "6610:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6832:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6842:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6854:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6842:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6922:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6935:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6946:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6931:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6878:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6878:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6878:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6804:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6816:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6827:4:6",
														"type": ""
													}
												],
												"src": "6734:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7027:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7044:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7067:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7049:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7049:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7037:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7037:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7015:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7022:3:6",
														"type": ""
													}
												],
												"src": "6962:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7184:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7194:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7206:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7194:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7287:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7298:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7283:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7230:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7156:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7168:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7179:4:6",
														"type": ""
													}
												],
												"src": "7086:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7410:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7427:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7432:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7420:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7420:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7420:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7448:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7467:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7472:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7448:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7382:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7387:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7398:11:6",
														"type": ""
													}
												],
												"src": "7314:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7595:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7617:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7625:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7613:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7613:14:6"
																	},
																	{
																		"hexValue": "696e76616c6964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7629:9:6",
																		"type": "",
																		"value": "invalid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7606:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7606:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7606:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7587:6:6",
														"type": ""
													}
												],
												"src": "7489:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7798:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7808:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7874:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7879:1:6",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7815:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7815:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7979:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
																	"nodeType": "YulIdentifier",
																	"src": "7890:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7992:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8003:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8008:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7999:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7999:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7786:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7794:3:6",
														"type": ""
													}
												],
												"src": "7652:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8194:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8204:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8216:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8227:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8212:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8212:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8204:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8251:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8262:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8247:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8270:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8276:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8266:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8266:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8296:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8430:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8304:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8304:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8296:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8174:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8189:4:6",
														"type": ""
													}
												],
												"src": "8023:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8476:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8493:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8496:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8486:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8486:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8486:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8590:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8593:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8583:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8583:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8583:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8614:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8617:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8607:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8607:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8448:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8678:147:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8688:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8711:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8693:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8688:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8722:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8745:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8727:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8727:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8722:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8756:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8767:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8770:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8763:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8763:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8756:3:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8796:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8798:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8798:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8798:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8788:1:6"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8791:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8785:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8785:10:6"
															},
															"nodeType": "YulIf",
															"src": "8782:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8665:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8668:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8674:3:6",
														"type": ""
													}
												],
												"src": "8634:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8985:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8995:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9007:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9018:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9003:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9003:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8995:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9075:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9088:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9099:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9084:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9084:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9031:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9031:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9156:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9169:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9180:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9165:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9165:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9112:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9238:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9251:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9262:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9247:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9194:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9194:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8941:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8953:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8961:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8969:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8980:4:6",
														"type": ""
													}
												],
												"src": "8831:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9319:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9373:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9382:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9385:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9375:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9375:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9375:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9342:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9364:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "9349:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9349:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9339:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9339:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9332:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9332:40:6"
															},
															"nodeType": "YulIf",
															"src": "9329:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9312:5:6",
														"type": ""
													}
												],
												"src": "9279:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9461:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9471:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9486:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9480:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9480:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9471:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9526:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9502:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9502:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9502:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9439:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9447:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9455:5:6",
														"type": ""
													}
												],
												"src": "9401:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9618:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9664:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9666:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9666:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9666:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9639:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9648:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9635:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9635:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9660:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9631:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9631:32:6"
															},
															"nodeType": "YulIf",
															"src": "9628:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "9757:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9772:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9786:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9776:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9801:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9844:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9855:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9840:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9840:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9864:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9811:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9801:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9588:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9599:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9611:6:6",
														"type": ""
													}
												],
												"src": "9544:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10001:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10023:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10031:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10019:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10019:14:6"
																	},
																	{
																		"hexValue": "5472616e736665722066726f6d206572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10035:21:6",
																		"type": "",
																		"value": "Transfer from error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10012:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10012:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10012:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9993:6:6",
														"type": ""
													}
												],
												"src": "9895:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10216:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10226:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10292:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10297:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10233:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10226:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10398:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
																	"nodeType": "YulIdentifier",
																	"src": "10309:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10309:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10309:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10411:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10422:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10204:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10212:3:6",
														"type": ""
													}
												],
												"src": "10070:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10613:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10623:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10635:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10646:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10631:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10631:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10623:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10670:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10681:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10666:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10666:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10689:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10685:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10685:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10659:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10715:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10849:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10723:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10723:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10715:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10593:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10608:4:6",
														"type": ""
													}
												],
												"src": "10442:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10928:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10945:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10966:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "10950:15:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10950:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10938:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10916:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10923:3:6",
														"type": ""
													}
												],
												"src": "10867:112:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11050:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11067:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11090:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "11072:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11072:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11060:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11060:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11060:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11038:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11045:3:6",
														"type": ""
													}
												],
												"src": "10985:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11371:616:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11381:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11393:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11404:3:6",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11389:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11389:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11381:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11462:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11475:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11486:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11471:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11471:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11418:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11418:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11543:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11556:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11567:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11552:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11552:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11499:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11499:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11499:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11625:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11638:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11649:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11634:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11634:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11581:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11581:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11581:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11707:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11720:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11731:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11716:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11716:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11663:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11663:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11785:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11798:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11809:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11794:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11794:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11745:39:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11745:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11745:69:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "11868:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11881:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11892:3:6",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11877:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11877:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11824:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11824:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11824:73:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "11951:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11964:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:3:6",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11907:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11907:73:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11907:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11295:9:6",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "11307:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11315:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11323:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11331:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11339:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11347:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11355:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11366:4:6",
														"type": ""
													}
												],
												"src": "11109:878:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid\")\n\n    }\n\n    function abi_encode_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer from error\")\n\n    }\n\n    function abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"232": [
									{
										"length": 32,
										"start": 311
									},
									{
										"length": 32,
										"start": 546
									},
									{
										"length": 32,
										"start": 780
									},
									{
										"length": 32,
										"start": 1086
									},
									{
										"length": 32,
										"start": 1270
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061005f575f3560e01c806223de291461006357806324a756d11461007f57806347e7ef24146100af5780638f7b1bca146100cb578063cb13cddb146100e7578063fc0c546a14610117575b5f80fd5b61007d6004803603810190610078919061060e565b610135565b005b610099600480360381019061009491906106d8565b61021f565b6040516100a69190610730565b60405180910390f35b6100c960048036038101906100c491906106d8565b61030a565b005b6100e560048036038101906100e091906107b2565b61043c565b005b61010160048036038101906100fc919061083b565b6104e0565b60405161010e9190610875565b60405180910390f35b61011f6104f4565b60405161012c919061089d565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ba90610910565b60405180910390fd5b845f808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461020e919061095b565b925050819055505050505050505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a590610910565b60405180910390fd5b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546102f9919061095b565b925050819055506001905092915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103679392919061098e565b6020604051808303815f875af1158015610383573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a791906109ed565b6103e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd90610a62565b60405180910390fd5b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610431919061095b565b925050819055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b81526004016104a19796959493929190610a9e565b5f604051808303815f87803b1580156104b8575f80fd5b505af11580156104ca573d5f803e3d5ffd5b505050506104d8868661030a565b505050505050565b5f602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61054982610520565b9050919050565b6105598161053f565b8114610563575f80fd5b50565b5f8135905061057481610550565b92915050565b5f819050919050565b61058c8161057a565b8114610596575f80fd5b50565b5f813590506105a781610583565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126105ce576105cd6105ad565b5b8235905067ffffffffffffffff8111156105eb576105ea6105b1565b5b602083019150836001820283011115610607576106066105b5565b5b9250929050565b5f805f805f805f8060c0898b03121561062a57610629610518565b5b5f6106378b828c01610566565b98505060206106488b828c01610566565b97505060406106598b828c01610566565b965050606061066a8b828c01610599565b955050608089013567ffffffffffffffff81111561068b5761068a61051c565b5b6106978b828c016105b9565b945094505060a089013567ffffffffffffffff8111156106ba576106b961051c565b5b6106c68b828c016105b9565b92509250509295985092959890939650565b5f80604083850312156106ee576106ed610518565b5b5f6106fb85828601610566565b925050602061070c85828601610599565b9150509250929050565b5f8115159050919050565b61072a81610716565b82525050565b5f6020820190506107435f830184610721565b92915050565b5f60ff82169050919050565b61075e81610749565b8114610768575f80fd5b50565b5f8135905061077981610755565b92915050565b5f819050919050565b6107918161077f565b811461079b575f80fd5b50565b5f813590506107ac81610788565b92915050565b5f805f805f8060c087890312156107cc576107cb610518565b5b5f6107d989828a01610566565b96505060206107ea89828a01610599565b95505060406107fb89828a01610599565b945050606061080c89828a0161076b565b935050608061081d89828a0161079e565b92505060a061082e89828a0161079e565b9150509295509295509295565b5f602082840312156108505761084f610518565b5b5f61085d84828501610566565b91505092915050565b61086f8161057a565b82525050565b5f6020820190506108885f830184610866565b92915050565b6108978161053f565b82525050565b5f6020820190506108b05f83018461088e565b92915050565b5f82825260208201905092915050565b7f696e76616c6964000000000000000000000000000000000000000000000000005f82015250565b5f6108fa6007836108b6565b9150610905826108c6565b602082019050919050565b5f6020820190508181035f830152610927816108ee565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109658261057a565b91506109708361057a565b92508282019050808211156109885761098761092e565b5b92915050565b5f6060820190506109a15f83018661088e565b6109ae602083018561088e565b6109bb6040830184610866565b949350505050565b6109cc81610716565b81146109d6575f80fd5b50565b5f815190506109e7816109c3565b92915050565b5f60208284031215610a0257610a01610518565b5b5f610a0f848285016109d9565b91505092915050565b7f5472616e736665722066726f6d206572726f72000000000000000000000000005f82015250565b5f610a4c6013836108b6565b9150610a5782610a18565b602082019050919050565b5f6020820190508181035f830152610a7981610a40565b9050919050565b610a8981610749565b82525050565b610a988161077f565b82525050565b5f60e082019050610ab15f83018a61088e565b610abe602083018961088e565b610acb6040830188610866565b610ad86060830187610866565b610ae56080830186610a80565b610af260a0830185610a8f565b610aff60c0830184610a8f565b9897505050505050505056fea2646970667358221220090fbd5e74919f07ab34f3c9c0566d2e959673589559a18c58a531fcf9be3fbe64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x24A756D1 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x8F7B1BCA EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xCB13CDDB EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x117 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x60E JUMP JUMPDEST PUSH2 0x135 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A5 SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x383 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A7 SWAP2 SWAP1 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x3E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x95B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA9E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4D8 DUP7 DUP7 PUSH2 0x30A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x549 DUP3 PUSH2 0x520 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x559 DUP2 PUSH2 0x53F JUMP JUMPDEST DUP2 EQ PUSH2 0x563 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x574 DUP2 PUSH2 0x550 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58C DUP2 PUSH2 0x57A JUMP JUMPDEST DUP2 EQ PUSH2 0x596 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A7 DUP2 PUSH2 0x583 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5CE JUMPI PUSH2 0x5CD PUSH2 0x5AD JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH2 0x5EA PUSH2 0x5B1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x607 JUMPI PUSH2 0x606 PUSH2 0x5B5 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x62A JUMPI PUSH2 0x629 PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x637 DUP12 DUP3 DUP13 ADD PUSH2 0x566 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x648 DUP12 DUP3 DUP13 ADD PUSH2 0x566 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x659 DUP12 DUP3 DUP13 ADD PUSH2 0x566 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x66A DUP12 DUP3 DUP13 ADD PUSH2 0x599 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x68B JUMPI PUSH2 0x68A PUSH2 0x51C JUMP JUMPDEST JUMPDEST PUSH2 0x697 DUP12 DUP3 DUP13 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6BA JUMPI PUSH2 0x6B9 PUSH2 0x51C JUMP JUMPDEST JUMPDEST PUSH2 0x6C6 DUP12 DUP3 DUP13 ADD PUSH2 0x5B9 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EE JUMPI PUSH2 0x6ED PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6FB DUP6 DUP3 DUP7 ADD PUSH2 0x566 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x70C DUP6 DUP3 DUP7 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x72A DUP2 PUSH2 0x716 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x743 PUSH0 DUP4 ADD DUP5 PUSH2 0x721 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75E DUP2 PUSH2 0x749 JUMP JUMPDEST DUP2 EQ PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x779 DUP2 PUSH2 0x755 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x791 DUP2 PUSH2 0x77F JUMP JUMPDEST DUP2 EQ PUSH2 0x79B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7AC DUP2 PUSH2 0x788 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH2 0x7CB PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D9 DUP10 DUP3 DUP11 ADD PUSH2 0x566 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x7EA DUP10 DUP3 DUP11 ADD PUSH2 0x599 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x7FB DUP10 DUP3 DUP11 ADD PUSH2 0x599 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x80C DUP10 DUP3 DUP11 ADD PUSH2 0x76B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x81D DUP10 DUP3 DUP11 ADD PUSH2 0x79E JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x82E DUP10 DUP3 DUP11 ADD PUSH2 0x79E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x85D DUP5 DUP3 DUP6 ADD PUSH2 0x566 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x86F DUP2 PUSH2 0x57A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x888 PUSH0 DUP4 ADD DUP5 PUSH2 0x866 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x897 DUP2 PUSH2 0x53F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x88E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E76616C696400000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8FA PUSH1 0x7 DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x905 DUP3 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x927 DUP2 PUSH2 0x8EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x965 DUP3 PUSH2 0x57A JUMP JUMPDEST SWAP2 POP PUSH2 0x970 DUP4 PUSH2 0x57A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x988 JUMPI PUSH2 0x987 PUSH2 0x92E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9A1 PUSH0 DUP4 ADD DUP7 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x866 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x9CC DUP2 PUSH2 0x716 JUMP JUMPDEST DUP2 EQ PUSH2 0x9D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x9E7 DUP2 PUSH2 0x9C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA02 JUMPI PUSH2 0xA01 PUSH2 0x518 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA0F DUP5 DUP3 DUP6 ADD PUSH2 0x9D9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D206572726F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA4C PUSH1 0x13 DUP4 PUSH2 0x8B6 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP3 PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA79 DUP2 PUSH2 0xA40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA89 DUP2 PUSH2 0x749 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA98 DUP2 PUSH2 0x77F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0xAB1 PUSH0 DUP4 ADD DUP11 PUSH2 0x88E JUMP JUMPDEST PUSH2 0xABE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x88E JUMP JUMPDEST PUSH2 0xACB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x866 JUMP JUMPDEST PUSH2 0xAD8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x866 JUMP JUMPDEST PUSH2 0xAE5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xA8F JUMP JUMPDEST PUSH2 0xAFF PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0xA8F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xF 0xBD 0x5E PUSH21 0x919F07AB34F3C9C0566D2E959673589559A18C58A5 BALANCE 0xFC 0xF9 0xBE EXTCODEHASH 0xBE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "342:1573:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1399:289;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1720:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1134:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;379:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;426:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1399:289;1629:5;1615:19;;:10;:19;;;1607:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;1675:6;1656:9;:15;1666:4;1656:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;1399:289;;;;;;;;:::o;1720:191::-;1791:4;1829:5;1815:19;;:10;:19;;;1807:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;1877:6;1856:9;:17;1866:6;1856:17;;;;;;;;;;;;;;;;:27;;;;;;;:::i;:::-;;;;;;;;1900:4;1893:11;;1720:191;;;;:::o;931:196::-;1007:5;1000:26;;;1027:10;1047:4;1054:6;1000:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;992:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1114:6;1095:9;:15;1105:4;1095:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;931:196;;:::o;1134:233::-;1262:5;1249:26;;;1276:10;1296:4;1303:6;1311:8;1321:1;1324;1327;1249:80;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:21;1347:4;1353:6;1339:7;:21::i;:::-;1134:233;;;;;;:::o;379:41::-;;;;;;;;;;;;;;;;;:::o;426:30::-;;;:::o;88:117:6:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:1453::-;2263:6;2271;2279;2287;2295;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3034:3;3023:9;3019:19;3006:33;3066:18;3058:6;3055:30;3052:117;;;3088:79;;:::i;:::-;3052:117;3201:64;3257:7;3248:6;3237:9;3233:22;3201:64;:::i;:::-;3183:82;;;;2977:298;3342:3;3331:9;3327:19;3314:33;3374:18;3366:6;3363:30;3360:117;;;3396:79;;:::i;:::-;3360:117;3509:64;3565:7;3556:6;3545:9;3541:22;3509:64;:::i;:::-;3491:82;;;;3285:298;2137:1453;;;;;;;;;;;:::o;3596:474::-;3664:6;3672;3721:2;3709:9;3700:7;3696:23;3692:32;3689:119;;;3727:79;;:::i;:::-;3689:119;3847:1;3872:53;3917:7;3908:6;3897:9;3893:22;3872:53;:::i;:::-;3862:63;;3818:117;3974:2;4000:53;4045:7;4036:6;4025:9;4021:22;4000:53;:::i;:::-;3990:63;;3945:118;3596:474;;;;;:::o;4076:90::-;4110:7;4153:5;4146:13;4139:21;4128:32;;4076:90;;;:::o;4172:109::-;4253:21;4268:5;4253:21;:::i;:::-;4248:3;4241:34;4172:109;;:::o;4287:210::-;4374:4;4412:2;4401:9;4397:18;4389:26;;4425:65;4487:1;4476:9;4472:17;4463:6;4425:65;:::i;:::-;4287:210;;;;:::o;4503:86::-;4538:7;4578:4;4571:5;4567:16;4556:27;;4503:86;;;:::o;4595:118::-;4666:22;4682:5;4666:22;:::i;:::-;4659:5;4656:33;4646:61;;4703:1;4700;4693:12;4646:61;4595:118;:::o;4719:135::-;4763:5;4801:6;4788:20;4779:29;;4817:31;4842:5;4817:31;:::i;:::-;4719:135;;;;:::o;4860:77::-;4897:7;4926:5;4915:16;;4860:77;;;:::o;4943:122::-;5016:24;5034:5;5016:24;:::i;:::-;5009:5;5006:35;4996:63;;5055:1;5052;5045:12;4996:63;4943:122;:::o;5071:139::-;5117:5;5155:6;5142:20;5133:29;;5171:33;5198:5;5171:33;:::i;:::-;5071:139;;;;:::o;5216:1053::-;5318:6;5326;5334;5342;5350;5358;5407:3;5395:9;5386:7;5382:23;5378:33;5375:120;;;5414:79;;:::i;:::-;5375:120;5534:1;5559:53;5604:7;5595:6;5584:9;5580:22;5559:53;:::i;:::-;5549:63;;5505:117;5661:2;5687:53;5732:7;5723:6;5712:9;5708:22;5687:53;:::i;:::-;5677:63;;5632:118;5789:2;5815:53;5860:7;5851:6;5840:9;5836:22;5815:53;:::i;:::-;5805:63;;5760:118;5917:2;5943:51;5986:7;5977:6;5966:9;5962:22;5943:51;:::i;:::-;5933:61;;5888:116;6043:3;6070:53;6115:7;6106:6;6095:9;6091:22;6070:53;:::i;:::-;6060:63;;6014:119;6172:3;6199:53;6244:7;6235:6;6224:9;6220:22;6199:53;:::i;:::-;6189:63;;6143:119;5216:1053;;;;;;;;:::o;6275:329::-;6334:6;6383:2;6371:9;6362:7;6358:23;6354:32;6351:119;;;6389:79;;:::i;:::-;6351:119;6509:1;6534:53;6579:7;6570:6;6559:9;6555:22;6534:53;:::i;:::-;6524:63;;6480:117;6275:329;;;;:::o;6610:118::-;6697:24;6715:5;6697:24;:::i;:::-;6692:3;6685:37;6610:118;;:::o;6734:222::-;6827:4;6865:2;6854:9;6850:18;6842:26;;6878:71;6946:1;6935:9;6931:17;6922:6;6878:71;:::i;:::-;6734:222;;;;:::o;6962:118::-;7049:24;7067:5;7049:24;:::i;:::-;7044:3;7037:37;6962:118;;:::o;7086:222::-;7179:4;7217:2;7206:9;7202:18;7194:26;;7230:71;7298:1;7287:9;7283:17;7274:6;7230:71;:::i;:::-;7086:222;;;;:::o;7314:169::-;7398:11;7432:6;7427:3;7420:19;7472:4;7467:3;7463:14;7448:29;;7314:169;;;;:::o;7489:157::-;7629:9;7625:1;7617:6;7613:14;7606:33;7489:157;:::o;7652:365::-;7794:3;7815:66;7879:1;7874:3;7815:66;:::i;:::-;7808:73;;7890:93;7979:3;7890:93;:::i;:::-;8008:2;8003:3;7999:12;7992:19;;7652:365;;;:::o;8023:419::-;8189:4;8227:2;8216:9;8212:18;8204:26;;8276:9;8270:4;8266:20;8262:1;8251:9;8247:17;8240:47;8304:131;8430:4;8304:131;:::i;:::-;8296:139;;8023:419;;;:::o;8448:180::-;8496:77;8493:1;8486:88;8593:4;8590:1;8583:15;8617:4;8614:1;8607:15;8634:191;8674:3;8693:20;8711:1;8693:20;:::i;:::-;8688:25;;8727:20;8745:1;8727:20;:::i;:::-;8722:25;;8770:1;8767;8763:9;8756:16;;8791:3;8788:1;8785:10;8782:36;;;8798:18;;:::i;:::-;8782:36;8634:191;;;;:::o;8831:442::-;8980:4;9018:2;9007:9;9003:18;8995:26;;9031:71;9099:1;9088:9;9084:17;9075:6;9031:71;:::i;:::-;9112:72;9180:2;9169:9;9165:18;9156:6;9112:72;:::i;:::-;9194;9262:2;9251:9;9247:18;9238:6;9194:72;:::i;:::-;8831:442;;;;;;:::o;9279:116::-;9349:21;9364:5;9349:21;:::i;:::-;9342:5;9339:32;9329:60;;9385:1;9382;9375:12;9329:60;9279:116;:::o;9401:137::-;9455:5;9486:6;9480:13;9471:22;;9502:30;9526:5;9502:30;:::i;:::-;9401:137;;;;:::o;9544:345::-;9611:6;9660:2;9648:9;9639:7;9635:23;9631:32;9628:119;;;9666:79;;:::i;:::-;9628:119;9786:1;9811:61;9864:7;9855:6;9844:9;9840:22;9811:61;:::i;:::-;9801:71;;9757:125;9544:345;;;;:::o;9895:169::-;10035:21;10031:1;10023:6;10019:14;10012:45;9895:169;:::o;10070:366::-;10212:3;10233:67;10297:2;10292:3;10233:67;:::i;:::-;10226:74;;10309:93;10398:3;10309:93;:::i;:::-;10427:2;10422:3;10418:12;10411:19;;10070:366;;;:::o;10442:419::-;10608:4;10646:2;10635:9;10631:18;10623:26;;10695:9;10689:4;10685:20;10681:1;10670:9;10666:17;10659:47;10723:131;10849:4;10723:131;:::i;:::-;10715:139;;10442:419;;;:::o;10867:112::-;10950:22;10966:5;10950:22;:::i;:::-;10945:3;10938:35;10867:112;;:::o;10985:118::-;11072:24;11090:5;11072:24;:::i;:::-;11067:3;11060:37;10985:118;;:::o;11109:878::-;11366:4;11404:3;11393:9;11389:19;11381:27;;11418:71;11486:1;11475:9;11471:17;11462:6;11418:71;:::i;:::-;11499:72;11567:2;11556:9;11552:18;11543:6;11499:72;:::i;:::-;11581;11649:2;11638:9;11634:18;11625:6;11581:72;:::i;:::-;11663;11731:2;11720:9;11716:18;11707:6;11663:72;:::i;:::-;11745:69;11809:3;11798:9;11794:19;11785:6;11745:69;:::i;:::-;11824:73;11892:3;11881:9;11877:19;11868:6;11824:73;:::i;:::-;11907;11975:3;11964:9;11960:19;11951:6;11907:73;:::i;:::-;11109:878;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "576200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deposit(address,uint256)": "infinite",
								"deposited(address)": "2867",
								"permitDeposit(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"token()": "infinite",
								"tokensReceived(address,address,address,uint256,bytes,bytes)": "infinite",
								"tokensReceived(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "A0"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 699,
									"end": 741,
									"name": "PUSH",
									"source": 5,
									"value": "1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
								},
								{
									"begin": 647,
									"end": 742,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 647,
									"end": 742,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 647,
									"end": 742,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 647,
									"end": 742,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 647,
									"end": 742,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 647,
									"end": 742,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 647,
									"end": 742,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 749,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 749,
									"end": 924,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 795,
									"end": 801,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 787,
									"end": 801,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 787,
									"end": 801,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 787,
									"end": 801,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 787,
									"end": 801,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 749,
									"end": 924,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "ASSIGNIMMUTABLE",
									"source": 5,
									"value": "232"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 1915,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220090fbd5e74919f07ab34f3c9c0566d2e959673589559a18c58a531fcf9be3fbe64736f6c63430008140033",
									".code": [
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "23DE29"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "24A756D1"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "47E7EF24"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "8F7B1BCA"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "CB13CDDB"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 342,
											"end": 1915,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1399,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1399,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1720,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1720,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1720,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 931,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 931,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1134,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1134,
											"end": 1367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 379,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 379,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 379,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 426,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 426,
											"end": 456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1634,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1615,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1634,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1607,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1607,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1656,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1656,
											"end": 1681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1825,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1834,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1807,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1872,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1856,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1893,
											"end": 1904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1012,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1027,
											"end": 1037,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1051,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1000,
											"end": 1061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1000,
											"end": 1061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1000,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 992,
											"end": 1085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 992,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1109,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1095,
											"end": 1120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1267,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1249,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1249,
											"end": 1275,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1275,
											"name": "PUSH",
											"source": 5,
											"value": "D505ACCF"
										},
										{
											"begin": 1276,
											"end": 1286,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1319,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1249,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1347,
											"end": 1351,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1339,
											"end": 1360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1339,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 379,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 426,
											"end": 456,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 426,
											"end": 456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2375,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2520,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2648,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2711,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2776,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2904,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3006,
											"end": 3039,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3088,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3257,
											"end": 3264,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3201,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2977,
											"end": 3275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3347,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3396,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3563,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3509,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3285,
											"end": 3583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3707,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3719,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3724,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3727,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3727,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3689,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3915,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3872,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 3872,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3925,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4021,
											"end": 4043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 4000,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4000,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3990,
											"end": 4053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 4063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 4070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4166,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4076,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4159,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4166,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4076,
											"end": 4166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4281,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4172,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4268,
											"end": 4273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 4253,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4275,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4497,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 4287,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4415,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4485,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4425,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4490,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 4425,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4497,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4287,
											"end": 4497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4589,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4503,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4578,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4571,
											"end": 4576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4583,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4713,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4595,
											"end": 4713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4682,
											"end": 4687,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4666,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4666,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4659,
											"end": 4664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4689,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4646,
											"end": 4707,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4707,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4646,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4595,
											"end": 4713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4854,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4719,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4763,
											"end": 4768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4808,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4779,
											"end": 4808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4817,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4817,
											"end": 4848,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4817,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4937,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4860,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4915,
											"end": 4931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5065,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4943,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5016,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5041,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 4996,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4943,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5210,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5071,
											"end": 5210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5142,
											"end": 5162,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5162,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5198,
											"end": 5203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5171,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5204,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 5171,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5210,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5071,
											"end": 5210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5410,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 5395,
											"end": 5404,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5386,
											"end": 5393,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5405,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5411,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5375,
											"end": 5495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5414,
											"end": 5493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5414,
											"end": 5493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5493,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5414,
											"end": 5493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5495,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5375,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5535,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5604,
											"end": 5611,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5580,
											"end": 5602,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5559,
											"end": 5612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5559,
											"end": 5612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5612,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5505,
											"end": 5622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5723,
											"end": 5729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5721,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5687,
											"end": 5740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5687,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5632,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5860,
											"end": 5867,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5849,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5836,
											"end": 5858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5815,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5868,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 5815,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5868,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5805,
											"end": 5868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5760,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 5919,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5943,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5986,
											"end": 5993,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5966,
											"end": 5975,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 5984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 5943,
											"end": 5994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5994,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5943,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5994,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5888,
											"end": 6004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6070,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6115,
											"end": 6122,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6106,
											"end": 6112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6091,
											"end": 6113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6070,
											"end": 6123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6070,
											"end": 6123,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6070,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6123,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6175,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6233,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6220,
											"end": 6242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6199,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6199,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6189,
											"end": 6252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 6269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6604,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 6275,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6371,
											"end": 6380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6362,
											"end": 6369,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6381,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6386,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6470,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6351,
											"end": 6470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6389,
											"end": 6468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6389,
											"end": 6468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6468,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6389,
											"end": 6468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6470,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6351,
											"end": 6470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6579,
											"end": 6586,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6570,
											"end": 6576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6568,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6534,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6534,
											"end": 6587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6534,
											"end": 6587,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 6534,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6480,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6715,
											"end": 6720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6697,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6697,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6692,
											"end": 6695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6956,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 6734,
											"end": 6956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6946,
											"end": 6947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6944,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6878,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6949,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6878,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6956,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6956,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6734,
											"end": 6956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 7080,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6962,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7067,
											"end": 7072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7049,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7049,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7044,
											"end": 7047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 7080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 7080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 7080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7308,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 7086,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7202,
											"end": 7220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7194,
											"end": 7220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7298,
											"end": 7299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7300,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 7230,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7308,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7483,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7314,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7398,
											"end": 7409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7420,
											"end": 7439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7472,
											"end": 7476,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7467,
											"end": 7470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7463,
											"end": 7477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7448,
											"end": 7477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7483,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7314,
											"end": 7483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7646,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7489,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "PUSH",
											"source": 6,
											"value": "696E76616C696400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7606,
											"end": 7639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 8017,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7652,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7879,
											"end": 7880,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7874,
											"end": 7877,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7815,
											"end": 7881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 7881,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7815,
											"end": 7881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7979,
											"end": 7982,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7890,
											"end": 7983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7890,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8003,
											"end": 8006,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7992,
											"end": 8011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 8017,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 8017,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 8017,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 8017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8193,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8229,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8216,
											"end": 8225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8285,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8270,
											"end": 8274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8266,
											"end": 8286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8240,
											"end": 8287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8430,
											"end": 8434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 8304,
											"end": 8435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 8304,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8023,
											"end": 8442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8023,
											"end": 8442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8448,
											"end": 8628,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 8448,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8573,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8590,
											"end": 8591,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8617,
											"end": 8621,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8622,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8825,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 8634,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8674,
											"end": 8677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8693,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 8711,
											"end": 8712,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8693,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 8693,
											"end": 8713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8693,
											"end": 8713,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 8693,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 8727,
											"end": 8747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8727,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8747,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8767,
											"end": 8768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8791,
											"end": 8794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8788,
											"end": 8789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8785,
											"end": 8795,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8818,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8782,
											"end": 8818,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 8798,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 8798,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8782,
											"end": 8818,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 8782,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8825,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 8984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9007,
											"end": 9016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9003,
											"end": 9021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9099,
											"end": 9100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9084,
											"end": 9101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9031,
											"end": 9102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9031,
											"end": 9102,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 9031,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9169,
											"end": 9178,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9165,
											"end": 9183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9156,
											"end": 9162,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 9112,
											"end": 9184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 9112,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9262,
											"end": 9264,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9251,
											"end": 9260,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9238,
											"end": 9244,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 9194,
											"end": 9266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9266,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9194,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8831,
											"end": 9273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9279,
											"end": 9395,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9279,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9349,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9364,
											"end": 9369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9349,
											"end": 9370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 9349,
											"end": 9370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9349,
											"end": 9370,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9349,
											"end": 9370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9371,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9329,
											"end": 9389,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9382,
											"end": 9383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9387,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9329,
											"end": 9389,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9329,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9279,
											"end": 9395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9279,
											"end": 9395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9538,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 9401,
											"end": 9538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9480,
											"end": 9493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9471,
											"end": 9493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9526,
											"end": 9531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9502,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9532,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9502,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9538,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9401,
											"end": 9538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9889,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 9544,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 9662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9648,
											"end": 9657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9646,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9635,
											"end": 9658,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9631,
											"end": 9663,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9747,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9628,
											"end": 9747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9666,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9666,
											"end": 9745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9666,
											"end": 9745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9666,
											"end": 9745,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 9666,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9747,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 9628,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9786,
											"end": 9787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9811,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 9864,
											"end": 9871,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 9853,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 9811,
											"end": 9872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9811,
											"end": 9872,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 9811,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9801,
											"end": 9872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9889,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9544,
											"end": 9889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 10064,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 9895,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10056,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E736665722066726F6D206572726F7200000000000000000000000000"
										},
										{
											"begin": 10031,
											"end": 10032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 10064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 10064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10297,
											"end": 10299,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 10292,
											"end": 10295,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 10233,
											"end": 10300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 10233,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10398,
											"end": 10401,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10309,
											"end": 10402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 10309,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10422,
											"end": 10425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10631,
											"end": 10649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10623,
											"end": 10649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10623,
											"end": 10649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10689,
											"end": 10693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10685,
											"end": 10705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10681,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10683,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10659,
											"end": 10706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 10723,
											"end": 10854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10723,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10442,
											"end": 10861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10979,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 10867,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10950,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10966,
											"end": 10971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10950,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10950,
											"end": 10972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10950,
											"end": 10972,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10950,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 10948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10938,
											"end": 10973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10867,
											"end": 10979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11103,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10985,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 11090,
											"end": 11095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 11072,
											"end": 11096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11096,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 11072,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11060,
											"end": 11097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 11103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11366,
											"end": 11370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11407,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 11393,
											"end": 11402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11381,
											"end": 11408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11381,
											"end": 11408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 11486,
											"end": 11487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11475,
											"end": 11484,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11468,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 11418,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11489,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 11418,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11499,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11567,
											"end": 11569,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11556,
											"end": 11565,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11552,
											"end": 11570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11549,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 11499,
											"end": 11571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 11499,
											"end": 11571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11499,
											"end": 11571,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11499,
											"end": 11571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11649,
											"end": 11651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11638,
											"end": 11647,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11625,
											"end": 11631,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 11581,
											"end": 11653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11581,
											"end": 11653,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11581,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11731,
											"end": 11733,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 11663,
											"end": 11735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11735,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11663,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11745,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 11809,
											"end": 11812,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 11798,
											"end": 11807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11794,
											"end": 11813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11745,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 11745,
											"end": 11814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11745,
											"end": 11814,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 11745,
											"end": 11814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 11892,
											"end": 11895,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 11881,
											"end": 11890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11877,
											"end": 11896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11868,
											"end": 11874,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 11824,
											"end": 11897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11897,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 11824,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11975,
											"end": 11978,
											"name": "PUSH",
											"source": 6,
											"value": "C0"
										},
										{
											"begin": 11964,
											"end": 11973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11960,
											"end": 11979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11951,
											"end": 11957,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 11907,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11980,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 11907,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11109,
											"end": 11987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1820Registry.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
								"w3-1/src/Bank.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit(address,uint256)": "47e7ef24",
							"deposited(address)": "cb13cddb",
							"permitDeposit(address,uint256,uint256,uint8,bytes32,bytes32)": "8f7b1bca",
							"token()": "fc0c546a",
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
							"tokensReceived(address,uint256)": "24a756d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"w3-1/src/Bank.sol\":\"Bank\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1820Registry.sol\":{\"keccak256\":\"0x4cb9e864595dc8034d1649eb72d6ad31bcff1c9c8d3d94236cbbbc89493877db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff33a239a7f7ce6f61f0f6768c375783933525057ce07553ab63df25b9675401\",\"dweb:/ipfs/QmR3W9v31gLwvSPQYjsFGNabXB4sykYeVz8irG5xFRx1th\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5265dd0f6809e9fbb0ca8da7a5cd0940fcf6d8fcd4df20fbac942617d17b8d6\",\"dweb:/ipfs/QmS1gFsXoZ3uCEH6mfuRVvhE235WTGA8ttSWSs6Ehc9DUb\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"w3-1/src/Bank.sol\":{\"keccak256\":\"0x345f5315caeeec5afb5b17734196a2889ea79a99904160bfc68ff268cbcce364\",\"urls\":[\"bzz-raw://b82f3d20aebda03a4fce1ad9639a57ab9b3aa13def4aad293c88e9f4fc72960c\",\"dweb:/ipfs/QmW98Cy5PowKwa21oRZwyF9qEXmUKVpukzKwAE2R8oaGMw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 230,
								"contract": "w3-1/src/Bank.sol:Bank",
								"label": "deposited",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 241,
								"contract": "w3-1/src/Bank.sol:Bank",
								"label": "erc1820",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC1820Registry)209"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1820Registry)209": {
								"encoding": "inplace",
								"label": "contract IERC1820Registry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenRecipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,uint256)": "24a756d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"w3-1/src/Bank.sol\":\"TokenRecipient\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1820Registry.sol\":{\"keccak256\":\"0x4cb9e864595dc8034d1649eb72d6ad31bcff1c9c8d3d94236cbbbc89493877db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff33a239a7f7ce6f61f0f6768c375783933525057ce07553ab63df25b9675401\",\"dweb:/ipfs/QmR3W9v31gLwvSPQYjsFGNabXB4sykYeVz8irG5xFRx1th\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5265dd0f6809e9fbb0ca8da7a5cd0940fcf6d8fcd4df20fbac942617d17b8d6\",\"dweb:/ipfs/QmS1gFsXoZ3uCEH6mfuRVvhE235WTGA8ttSWSs6Ehc9DUb\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"w3-1/src/Bank.sol\":{\"keccak256\":\"0x345f5315caeeec5afb5b17734196a2889ea79a99904160bfc68ff268cbcce364\",\"urls\":[\"bzz-raw://b82f3d20aebda03a4fce1ad9639a57ab9b3aa13def4aad293c88e9f4fc72960c\",\"dweb:/ipfs/QmW98Cy5PowKwa21oRZwyF9qEXmUKVpukzKwAE2R8oaGMw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> w3-1/src/Bank.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "w3-1/src/Bank.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> w3-1/src/Bank.sol:42:9:\n   |\n42 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1448,
					"file": "w3-1/src/Bank.sol",
					"start": 1432
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> w3-1/src/Bank.sol:44:9:\n   |\n44 |         address to,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1490,
					"file": "w3-1/src/Bank.sol",
					"start": 1480
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> w3-1/src/Bank.sol:46:9:\n   |\n46 |         bytes calldata userData,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1544,
					"file": "w3-1/src/Bank.sol",
					"start": 1521
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> w3-1/src/Bank.sol:47:9:\n   |\n47 |         bytes calldata operatorData\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1581,
					"file": "w3-1/src/Bank.sol",
					"start": 1554
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							209
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
							"file": "../utils/introspection/IERC1820Registry.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3,
							"sourceUnit": 210,
							"src": "125:53:0",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "100:79:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							80
						]
					},
					"id": 81,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 80,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 80,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 80,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 80,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 80,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2668:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2682:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2728:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:1"
									},
									"scope": 80,
									"src": "2646:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "202:2534:1",
							"usedErrors": [],
							"usedEvents": [
								14,
								23
							]
						}
					],
					"src": "106:2631:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							116
						]
					},
					"id": 117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 82,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 83,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1480:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1503:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1528:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1551:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1577:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 93,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1594:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1613:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:2"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:2"
									},
									"scope": 116,
									"src": "1455:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1959:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:2"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1997:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:2"
									},
									"scope": 116,
									"src": "1943:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:2"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "2249:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:2"
									},
									"scope": 116,
									"src": "2198:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 117,
							"src": "629:1631:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2138:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							116
						]
					},
					"id": 120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 120,
							"sourceUnit": 117,
							"src": "219:28:3",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "129:119:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
					"exportedSymbols": {
						"IERC1820Registry": [
							209
						]
					},
					"id": 210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 121,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1820Registry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "149:619:4",
								"text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
							},
							"fullyImplemented": false,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC1820Registry",
							"nameLocation": "779:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
									"id": 130,
									"name": "InterfaceImplementerSet",
									"nameLocation": "808:23:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "848:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "832:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "interfaceHash",
												"nameLocation": "873:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "857:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "904:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "888:27:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "831:85:4"
									},
									"src": "802:115:4"
								},
								{
									"anonymous": false,
									"eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
									"id": 136,
									"name": "ManagerChanged",
									"nameLocation": "929:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "960:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "944:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "985:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "969:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:53:4"
									},
									"src": "923:74:4"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "1003:445:4",
										"text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
									},
									"functionSelector": "5df8122f",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setManager",
									"nameLocation": "1462:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "newManager",
												"nameLocation": "1498:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1490:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1472:37:4"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:4"
									},
									"scope": 209,
									"src": "1453:66:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1525:90:4",
										"text": " @dev Returns the manager for `account`.\n See {setManager}."
									},
									"functionSelector": "3d584063",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getManager",
									"nameLocation": "1629:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1640:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1639:17:4"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1680:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:4"
									},
									"scope": 209,
									"src": "1620:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1695:815:4",
										"text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
									},
									"functionSelector": "29965a1d",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setInterfaceImplementer",
									"nameLocation": "2524:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2556:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2548:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "2573:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2565:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 156,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "implementer",
												"nameLocation": "2597:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "2589:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2589:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2547:62:4"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2618:0:4"
									},
									"scope": 209,
									"src": "2515:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "2625:382:4",
										"text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
									},
									"functionSelector": "aabbb8ca",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getInterfaceImplementer",
									"nameLocation": "3021:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3053:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3045:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_interfaceHash",
												"nameLocation": "3070:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3062:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3062:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3044:41:4"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "3109:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3109:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3108:9:4"
									},
									"scope": 209,
									"src": "3012:106:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "3124:196:4",
										"text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
									},
									"functionSelector": "65ba36c1",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "interfaceHash",
									"nameLocation": "3334:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "interfaceName",
												"nameLocation": "3364:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3348:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3348:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:31:4"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "3402:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:9:4"
									},
									"scope": 209,
									"src": "3325:86:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "3417:260:4",
										"text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
									},
									"functionSelector": "a41e7d51",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateERC165Cache",
									"nameLocation": "3691:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3717:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3709:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3733:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "3726:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 184,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3708:37:4"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3754:0:4"
									},
									"scope": 209,
									"src": "3682:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "3761:536:4",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "f712f3e8",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165Interface",
									"nameLocation": "4311:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4345:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4337:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4361:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4354:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 192,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4354:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:37:4"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4397:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4397:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:6:4"
									},
									"scope": 209,
									"src": "4302:101:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "4409:312:4",
										"text": " @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
									},
									"functionSelector": "b7056765",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementsERC165InterfaceNoCache",
									"nameLocation": "4735:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4776:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4768:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4768:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4792:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4785:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 202,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4785:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4767:37:4"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "4828:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4828:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4827:6:4"
									},
									"scope": 209,
									"src": "4726:108:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 210,
							"src": "769:4067:4",
							"usedErrors": [],
							"usedEvents": [
								130,
								136
							]
						}
					],
					"src": "124:4713:4"
				},
				"id": 4
			},
			"w3-1/src/Bank.sol": {
				"ast": {
					"absolutePath": "w3-1/src/Bank.sol",
					"exportedSymbols": {
						"Bank": [
							376
						],
						"IERC1820Registry": [
							209
						],
						"IERC20": [
							80
						],
						"IERC20Permit": [
							116
						],
						"TokenRecipient": [
							224
						]
					},
					"id": 377,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"id": 212,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 377,
							"sourceUnit": 120,
							"src": "26:79:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 377,
							"sourceUnit": 81,
							"src": "106:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1820Registry.sol",
							"file": "@openzeppelin/contracts/interfaces/IERC1820Registry.sol",
							"id": 214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 377,
							"sourceUnit": 3,
							"src": "163:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenRecipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "TokenRecipient",
							"nameLocation": "240:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "24a756d1",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "270:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "293:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "285:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "306:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "301:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "284:29:5"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "332:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "332:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:6:5"
									},
									"scope": 224,
									"src": "261:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 377,
							"src": "230:110:5",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "TokenRecipient",
										"nameLocations": [
											"359:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "359:14:5"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "359:14:5"
								}
							],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 376,
							"linearizedBaseContracts": [
								376,
								224
							],
							"name": "Bank",
							"nameLocation": "351:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "cb13cddb",
									"id": 230,
									"mutability": "mutable",
									"name": "deposited",
									"nameLocation": "411:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 376,
									"src": "379:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 229,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 227,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "387:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "379:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 228,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "398:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 232,
									"mutability": "immutable",
									"name": "token",
									"nameLocation": "451:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 376,
									"src": "426:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 231,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "426:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 235,
									"mutability": "constant",
									"name": "TOKENS_RECIPIENT_INTERFACE_HASH",
									"nameLocation": "532:31:5",
									"nodeType": "VariableDeclaration",
									"scope": 376,
									"src": "507:133:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 233,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862323831666338633132393534643232353434646234356465333135396133393237323839356231363961383532623331346639636337363265343463353362",
										"id": 234,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "574:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80741353335606793576644178559265408063696393279619534167571325834855102858555_by_1",
											"typeString": "int_const 8074...(69 digits omitted)...8555"
										},
										"value": "0xb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "erc1820",
									"nameLocation": "672:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 376,
									"src": "647:95:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1820Registry_$209",
										"typeString": "contract IERC1820Registry"
									},
									"typeName": {
										"id": 237,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 236,
											"name": "IERC1820Registry",
											"nameLocations": [
												"647:16:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 209,
											"src": "647:16:5"
										},
										"referencedDeclaration": 209,
										"src": "647:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$209",
											"typeString": "contract IERC1820Registry"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
												"id": 239,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "699:42:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 238,
											"name": "IERC1820Registry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 209,
											"src": "682:16:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$209_$",
												"typeString": "type(contract IERC1820Registry)"
											}
										},
										"id": 240,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "682:60:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1820Registry_$209",
											"typeString": "contract IERC1820Registry"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "777:147:5",
										"statements": [
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 246,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "787:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 247,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "795:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "787:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "787:14:5"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "769:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "761:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "760:16:5"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "777:0:5"
									},
									"scope": 376,
									"src": "749:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "982:145:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 263,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1027:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1031:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1027:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1047:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Bank_$376",
																				"typeString": "contract Bank"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Bank_$376",
																				"typeString": "contract Bank"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1039:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1039:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1039:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "1054:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 260,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "1007:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 259,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "1000:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$80_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1000:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$80",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1014:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 79,
																"src": "1000:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1000:61:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722066726f6d206572726f72",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1063:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
																"typeString": "literal_string \"Transfer from error\""
															},
															"value": "Transfer from error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fedf650d9f66840d5bb4cd30e57376341e46aad0dc6660a6ea2be41a07c256df",
																"typeString": "literal_string \"Transfer from error\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "992:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:93:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "992:93:5"
											},
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 274,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1095:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 276,
														"indexExpression": {
															"id": 275,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "1105:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1095:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 277,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "1114:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1095:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "1095:25:5"
											}
										]
									},
									"functionSelector": "47e7ef24",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "940:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "956:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "948:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "967:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "962:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:27:5"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:0:5"
									},
									"scope": 376,
									"src": "931:196:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1239:128:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 300,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1276:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1280:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1276:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 304,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1296:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bank_$376",
																		"typeString": "contract Bank"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bank_$376",
																		"typeString": "contract Bank"
																	}
																],
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1288:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 302,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1288:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1288:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1303:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 307,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "1311:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 308,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "1321:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 309,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1324:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 310,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1327:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 297,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "1262:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 296,
																"name": "IERC20Permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "1249:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$116_$",
																	"typeString": "type(contract IERC20Permit)"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1249:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$116",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1269:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 101,
														"src": "1249:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1249:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "1249:80:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 314,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1347:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 315,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1353:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 313,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "1339:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "1339:21:5"
											}
										]
									},
									"functionSelector": "8f7b1bca",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitDeposit",
									"nameLocation": "1143:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1157:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1176:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1171:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1189:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1184:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1184:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1205:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1199:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 288,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1216:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1208:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1227:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1219:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:73:5"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:5"
									},
									"scope": 376,
									"src": "1134:233:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1597:91:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 335,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1615:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1619:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1615:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 337,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1629:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1615:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964",
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1636:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
																"typeString": "literal_string \"invalid\""
															},
															"value": "invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
																"typeString": "literal_string \"invalid\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1607:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1607:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "1607:39:5"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 342,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1656:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 344,
														"indexExpression": {
															"id": 343,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "1666:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1656:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 345,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "1675:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1656:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1656:25:5"
											}
										]
									},
									"functionSelector": "0023de29",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1408:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1440:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1432:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1466:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1458:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1488:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1480:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1505:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1500:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1500:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1536:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1521:23:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1521:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1569:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1554:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1554:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:165:5"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1597:0:5"
									},
									"scope": 376,
									"src": "1399:289:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										223
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1797:114:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 359,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1815:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1819:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1815:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 361,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1829:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1815:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1836:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
																"typeString": "literal_string \"invalid\""
															},
															"value": "invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
																"typeString": "literal_string \"invalid\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1807:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1807:39:5"
											},
											{
												"expression": {
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 366,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "1856:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 368,
														"indexExpression": {
															"id": 367,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1866:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1856:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 369,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1877:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1856:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1856:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1900:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 357,
												"id": 373,
												"nodeType": "Return",
												"src": "1893:11:5"
											}
										]
									},
									"functionSelector": "24a756d1",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1729:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1752:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1744:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1765:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1760:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1760:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:29:5"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1791:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1791:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:6:5"
									},
									"scope": 376,
									"src": "1720:191:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 377,
							"src": "342:1573:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1917:5"
				},
				"id": 5
			}
		}
	}
}